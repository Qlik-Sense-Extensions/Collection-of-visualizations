define(["jquery","underscore","angular","qvangular","../config/config"],function(a,b,c,d,e){"use strict";d.service("wiRepositoryService",["$q","$timeout","$compile","$http",function(c,d,f,g){var h=function(b){return a.param(b)};return{getMainRepository:function(){var a=c.defer(),d=b.find(e.Repositories.repositories,function(a){return a.main===!0});return b.isEmpty(d)?a.reject(null):a.resolve(d),a.promise},getAuthUrl:function(a){var b=c.defer(),d=a.repUrl+"auth/authurl/";return g({method:"GET",url:d,cache:!1}).success(function(a){a.authenticationUrl?b.resolve(a.authenticationUrl):b.reject("AuthenticationUrl not returned.")}).catch(function(a,c){b.reject(a,c)}),b.promise},ping:function(a){var b=c.defer(),d=a.repUrl+"ping/";return g({method:"GET",url:d,cache:!1,withCredentials:!0}).success(function(a){b.resolve({pingResult:!0,data:a})}).error(function(a,c){b.reject({pingResult:!1,error:a,status:c})}),b.promise},checkAuthentication:function(a){var b=c.defer(),d=a.repUrl+"auth/status/";return g({method:"GET",url:d,cache:!1,withCredentials:!0}).success(function(a){var c={isAuthenticated:a.isAuthenticated,roles:a.roles,authenticationUrl:a.authenticationUrl,userId:a.userId,isVerified:a.isVerified};b.resolve(c)}).error(function(a,c){b.reject({errorDesc:"An error occurred while checking the authentication status",error:a,errorStatus:c})}),b.promise},logOut:function(a){var b=c.defer(),d=a.repUrl+"auth/logout/";return g({url:d,method:"GET",withCredentials:!0}).success(function(a){b.resolve(a)}).error(function(a,c){b.reject({error:a,errorStatus:c})}),b.promise},getUpdates:function(a,b){var d=c.defer(),e=b.repUrl+"versions/"+a+"/getupdates/";return g({url:e,method:"GET",cache:!1}).success(function(a,b){200===b&&d.resolve(a)}).error(function(a,b){d.reject({error:a,errorStatus:b})}),d.promise},getCategoriesFromMain:function(){var a=this.getMainRepository();return this.getCategories(a)},getCategories:function(a){var b=c.defer(),d=a.repUrl+"categories/";return g({method:"GET",url:d,cache:!1,withCredentials:!0}).success(function(a){b.resolve(a)}).error(function(a,c){b.reject({errorDesc:"Cannot retrieve categories",error:a,errorStatus:c})}),b.promise},loadWidgetsMeta:function(a){var b=c.defer(),d=a.repUrl+"widgets/meta/";return g({method:"GET",url:d,cache:!1,withCredentials:!0}).success(function(a){b.resolve(a)}).error(function(a,c){b.reject({data:a,status:c})}),b.promise},getWidgetDetails:function(a,b){var d=c.defer(),e=a.repUrl+"widget/"+b._id+"/details/";return g({method:"GET",url:e,cache:!1,withCredentials:!0}).success(function(a){d.resolve(a)}).error(function(a,b){d.reject({data:a,status:b})}),d.promise},getMyWidgets:function(a){var b=c.defer(),d=a.repUrl+"widgets/mywidgets/";return g({method:"GET",url:d,cache:!1,withCredentials:!0}).success(function(a){b.resolve(a)}).error(function(a,c){b.reject({errorDesc:'Cannot retrieve "My Widgets"',error:a,errorStatus:c})}),b.promise},trackPreview:function(a,b){var d=c.defer(),e=a.repUrl+"widget/"+b+"/preview/";return g({method:"PUT",url:e,cache:!1,withCredentials:!0}).success(function(a){d.resolve(a)}).error(function(a){d.reject(a)}),d.promise},toggleFav:function(a,b){var c=a.repUrl+"widgetactions/togglefav";g({url:c,method:"GET",cache:!1,params:{id:b},withCredentials:!0}).success(function(){}).error(function(){})},useWidget:function(a,b){var d=c.defer(),e=a.repUrl+"widget/"+b+"/use/";return g({url:e,method:"PUT",cache:!1,withCredentials:!0}).success(function(a){d.resolve(a)}).error(function(a,b){d.reject({error:a,errorStatus:b})}),d.promise},postWidget:function(a,b){var d=c.defer(),e=a.repUrl+"widget/",f=b._id?"PUT":"POST";return g({method:f,url:e,data:b,transformRequest:h,headers:{"Content-Type":"application/x-www-form-urlencoded"},withCredentials:!0}).success(function(a){d.resolve(a)}).error(function(a,b){var c={errorDesc:"An error occured while posting qWidget",error:a,errorStatus:b};d.reject(c)}),d.promise},deleteWidget:function(a,b){var d=c.defer(),e=a.repUrl+"widget/"+b+"/";return g({url:e,method:"DELETE",cache:!1,withCredentials:!0}).success(function(){d.resolve(!0)}).error(function(a,b){d.reject({errDesc:"Cannot delete the widget",err:a,errorStatus:b})}),d.promise},previewWS:function(a,b){var e=c.defer(),f=a.Main.SelectedRepository.repUrl+"widgets/"+b.WidgetId;return g({method:"GET",url:f,cache:!1,withCredentials:!0}).success(function(b){a.widgetPreview={},d(function(){a.widgetPreview.less=b.Less},0).then(function(){a.widgetPreview.html=b.Html,a.widgetPreview.data=b.Data}).then(function(){a.widgetPreview.PreviewImg=b.PreviewImg}),e.resolve(b)}).error(function(a){e.reject(a)}),e.promise},getSnippetCount:function(a){var b=a.repUrl+"snippets/getcount/",d=c.defer();return g({method:"GET",url:b,cache:!1,withCredentials:!0}).success(function(a){d.resolve(a)}).error(function(a){d.reject(a)}),d.promise},getSnippets:function(a){var b=a.repUrl+"snippets/",d=c.defer();return g({method:"GET",url:b,cache:!1}).success(function(a){d.resolve(a)}).error(function(a,b){d.reject({error:a,errorStatus:b})}),d.promise},trackSnippetUse:function(a,b){var d=a.repUrl+"snippet/"+b+"/",e=c.defer();return g({method:"PUT",url:d,cache:!1,withCredentials:!0}).success(function(a){e.resolve(a)}).error(function(a,b){e.reject({errorDesc:"Cannot track snippet usage",error:a,errorStatus:b})}),e.promise}}}])});