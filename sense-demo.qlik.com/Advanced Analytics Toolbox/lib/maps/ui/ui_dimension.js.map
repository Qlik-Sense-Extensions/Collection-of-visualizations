{
    "version": 3,
    "sources": [
        "ui/ui_dimension.js"
    ],
    "names": [
        "define",
        "uiElement",
        "leonardoui",
        "registerEvents",
        "$scope",
        "$compile",
        "listDimensionListPopover",
        "isDimensionListOpened",
        "openDimensionList",
        "$event",
        "dimensionId",
        "element",
        "currentTarget",
        "popover",
        "content",
        "listDimensionElement",
        "replace",
        "closeOnEscape",
        "dock",
        "alignTo",
        "onClose",
        "$apply",
        "scope",
        "dimSearchString",
        "$",
        "selectDimension",
        "expression",
        "i",
        "layout",
        "props",
        "dimensions",
        "test",
        "backendApi",
        "applyPatches",
        "qPath",
        "qOp",
        "qValue",
        "JSON",
        "stringify",
        "label",
        "close",
        "removeDimension"
    ],
    "mappings": "AAAA,YAAAA,SACE,eACA,8EACC,SAACC,EAAWC,GACb,OACEC,eADK,SACUC,EAAQC,GAErB,GAAIC,GAA2B,IAC/BF,GAAOG,yBACPH,EAAOI,kBAAoB,SAACC,EAAQC,GAClC,GAAIN,EAAOG,sBAAsBG,GAE/BN,EAAOG,sBAAsBG,IAAe,MACvC,CACLN,EAAOG,sBAAsBG,IAAe,CAC5C,IAAMC,GAAUF,EAAOG,aACvBN,GAA2BJ,EAAWW,SACpCC,QAASb,EAAUc,qBAAqBC,QAAQ,gBAAvC,GAA2DN,GACpEO,eAAe,EACfC,KAAM,QACNC,QAASR,EACTS,QAL4C,WAM1ChB,EAAOiB,OAAO,SAACC,GACbA,EAAMf,sBAAsBG,IAAe,EAC3CY,EAAMC,gBAAkB,QAI9BlB,EAASmB,EAAE,oBAAoBpB,KAInCA,EAAOqB,gBAAkB,SAACf,EAAagB,GACrC,IAAK,GAAIC,GAAIjB,EAAaiB,GAAK,EAAGA,IACgB,mBAArCvB,GAAOwB,OAAOC,MAAMC,WAAWH,KACxCjB,EAAciB,EAKd,MAAKI,KAAKL,KACZA,EAAAA,IAAiBA,EAAjB,KAEFtB,EAAO4B,WAAWC,eAEdC,MAAAA,qBAA4BxB,EAC5ByB,IAAK,MACLC,OAAQC,KAAKC,WAAYC,MAAOb,EAAYA,WAAYA,OAEzD,GAEHpB,EAAyBkC,SAG3BpC,EAAOqC,gBAAkB,SAAC/B,GACxBN,EAAO4B,WAAWC,eAEdC,MAAAA,qBAA4BxB,EAC5ByB,IAAK,YAEN",
    "file": "../../js/ui/ui_dimension.js",
    "sourcesContent": [
        "define([\r\n  './ui_element',\r\n  '../../../../../../resources/assets/external/leonardo-ui/leonardo-ui.min.js',\r\n], (uiElement, leonardoui) => {\r\n  return {\r\n    registerEvents($scope, $compile) {\r\n      // Dimension List\r\n      let listDimensionListPopover = null;\r\n      $scope.isDimensionListOpened = [];\r\n      $scope.openDimensionList = ($event, dimensionId) => {\r\n        if ($scope.isDimensionListOpened[dimensionId]) {\r\n          // popover.close();\r\n          $scope.isDimensionListOpened[dimensionId] = false;\r\n        } else {\r\n          $scope.isDimensionListOpened[dimensionId] = true;\r\n          const element = $event.currentTarget;\r\n          listDimensionListPopover = leonardoui.popover({\r\n            content: uiElement.listDimensionElement.replace('<dimensionId>', `${dimensionId}`),\r\n            closeOnEscape: true,\r\n            dock: 'right',\r\n            alignTo: element,\r\n            onClose() {\r\n              $scope.$apply((scope) => {\r\n                scope.isDimensionListOpened[dimensionId] = false;\r\n                scope.dimSearchString = '';\r\n              });\r\n            },\r\n          });\r\n          $compile($('div.lui-popover'))($scope);\r\n        }\r\n      };\r\n\r\n      $scope.selectDimension = (dimensionId, expression) => {\r\n        for (let i = dimensionId; i >= 0; i--) {\r\n          if (typeof $scope.layout.props.dimensions[i] == 'undefined') {\r\n            dimensionId = i;\r\n          }\r\n        }\r\n\r\n        // When expression includes whitespace, add square brankets\r\n        if (/\\s/.test(expression)) {\r\n          expression = `[${expression}]`;\r\n        }\r\n        $scope.backendApi.applyPatches([\r\n          {\r\n            qPath: `/props/dimensions/${dimensionId}`,\r\n            qOp: 'add',\r\n            qValue: JSON.stringify({ label: expression, expression: expression }),\r\n          },\r\n        ], false);\r\n\r\n        listDimensionListPopover.close();\r\n      };\r\n\r\n      $scope.removeDimension = (dimensionId) => {\r\n        $scope.backendApi.applyPatches([\r\n          {\r\n            qPath: `/props/dimensions/${dimensionId}`,\r\n            qOp: 'remove',\r\n          },\r\n        ], false);\r\n      };\r\n    },\r\n  };\r\n});\r\n"
    ]
}