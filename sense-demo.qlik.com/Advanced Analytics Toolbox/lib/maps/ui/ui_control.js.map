{
    "version": 3,
    "sources": [
        "ui/ui_control.js"
    ],
    "names": [
        "define",
        "analysis",
        "uiElement",
        "uiFieldList",
        "uiAnalysistype",
        "uiDimension",
        "uiMeasure",
        "createHtmlElements",
        "$scope",
        "$compile",
        "app",
        "extId",
        "layout",
        "qInfo",
        "qId",
        "screen",
        "selectedAnalysisType",
        "analysisTypes",
        "filter",
        "d",
        "id",
        "props",
        "analysisTypeId",
        "allowAddMea",
        "minDims",
        "minMeas",
        "file",
        "customMinMeas",
        "measures",
        "length",
        "$",
        "html",
        "frontPage",
        "analysisCategories",
        "createFieldList",
        "then",
        "reply",
        "fieldList",
        "registerEvents",
        "createArray",
        "arrayLength",
        "arr",
        "i",
        "push"
    ],
    "mappings": "AAAA,YAAAA,SACE,uBACA,eACA,iBACA,oBACA,iBACA,gBACC,SAACC,EAAUC,EAAWC,EAAaC,EAAgBC,EAAaC,GACjE,OACEC,mBADK,SACcC,EAAQC,EAAUC,GACnC,GAAMC,GAAQH,EAAOI,OAAOC,MAAMC,GAEb,IAAjBN,EAAOO,SAGTP,EAAOQ,qBAAuBf,EAASgB,cAAcC,OAAO,SAACC,GAC3D,MAAOA,GAAEC,KAAOZ,EAAOI,OAAOS,MAAMC,iBAItCd,EAAOe,YAAcf,EAAOQ,qBAAqB,GAAGO,YAGpDf,EAAOgB,QAAUhB,EAAOQ,qBAAqB,GAAGQ,QAChDhB,EAAOiB,QAAUjB,EAAOQ,qBAAqB,GAAGS,QAGhDjB,EAAOkB,KAAOlB,EAAOQ,qBAAqB,GAAGU,KAGV,mBAAxBlB,GAAOmB,gBAChBnB,EAAOmB,kBAE8D,mBAA5DnB,GAAOmB,cAAcnB,EAAOI,OAAOS,MAAMC,kBAClDd,EAAOmB,cAAcnB,EAAOI,OAAOS,MAAMC,gBAAkBd,EAAOiB,SAIhEjB,EAAOI,OAAOS,MAAMO,SAASC,OAASrB,EAAOmB,cAAcnB,EAAOI,OAAOS,MAAMC,kBACjFd,EAAOmB,cAAcnB,EAAOI,OAAOS,MAAMC,gBAAkBd,EAAOI,OAAOS,MAAMO,SAASC,SAK5FC,EAAAA,gCAAkCnB,GAASoB,KAAK7B,EAAU8B,WAC1DvB,EAASqB,EAAAA,mCAAqCnB,IAAUH,GAGxDA,EAAOyB,mBAAqBhC,EAASgC,mBACrCzB,EAAOS,cAAgBhB,EAASgB,cAGhCd,EAAY+B,gBAAgBxB,GAAKyB,KAAK,SAACC,GACrC5B,EAAO6B,UAAYD,IAIrBhC,EAAekC,eAAe9B,EAAQC,GAGtCJ,EAAYiC,eAAe9B,EAAQC,GAGnCH,EAAUgC,eAAe9B,EAAQC,GAGjCD,EAAO+B,YAAc,SAACC,GAEpB,IAAK,GADCC,MACGC,EAAI,EAAGA,EAAIF,IAAeE,EACjCD,EAAIE,KAAKD,EAEX,OAAOD",
    "file": "../../js/ui/ui_control.js",
    "sourcesContent": [
        "define([\r\n  '../analysis/analysis',\r\n  './ui_element',\r\n  './ui_fieldlist',\r\n  './ui_analysistype',\r\n  './ui_dimension',\r\n  './ui_measure',\r\n], (analysis, uiElement, uiFieldList, uiAnalysistype, uiDimension, uiMeasure) => {\r\n  return {\r\n    createHtmlElements($scope, $compile, app) {\r\n      const extId = $scope.layout.qInfo.qId;\r\n\r\n      if ($scope.screen == 1) {\r\n\r\n        // Filter the selected analysis type\r\n        $scope.selectedAnalysisType = analysis.analysisTypes.filter((d) => {\r\n          return d.id === $scope.layout.props.analysisTypeId;\r\n        });\r\n\r\n        // Set if selected analysis type allows to add measures\r\n        $scope.allowAddMea = $scope.selectedAnalysisType[0].allowAddMea;\r\n\r\n        // Set minDims and minmMeas.\r\n        $scope.minDims = $scope.selectedAnalysisType[0].minDims;\r\n        $scope.minMeas = $scope.selectedAnalysisType[0].minMeas;\r\n\r\n        // Set file name\r\n        $scope.file = $scope.selectedAnalysisType[0].file;\r\n\r\n        // Set customMinMeas\r\n        if (typeof $scope.customMinMeas == 'undefined') {\r\n          $scope.customMinMeas = [];\r\n        }\r\n        if (typeof $scope.customMinMeas[$scope.layout.props.analysisTypeId] == 'undefined') {\r\n          $scope.customMinMeas[$scope.layout.props.analysisTypeId] = $scope.minMeas;\r\n        }\r\n\r\n        // Overwrite minMeas when # of defined measure on property panel > minMeas\r\n        if ($scope.layout.props.measures.length > $scope.customMinMeas[$scope.layout.props.analysisTypeId]) {\r\n          $scope.customMinMeas[$scope.layout.props.analysisTypeId] = $scope.layout.props.measures.length;\r\n        }\r\n      }\r\n\r\n      // Initialize extension html element\r\n      $(`.advanced-analytics-toolsets-${extId}`).html(uiElement.frontPage);\r\n      $compile($(`div.advanced-analytics-toolsets-${extId}`))($scope);\r\n\r\n      // Get analysisCategories and analysisTypes\r\n      $scope.analysisCategories = analysis.analysisCategories;\r\n      $scope.analysisTypes = analysis.analysisTypes;\r\n\r\n      // Get fieldList\r\n      uiFieldList.createFieldList(app).then((reply) => {\r\n        $scope.fieldList = reply;\r\n      });\r\n\r\n      // Register analysis type selection events\r\n      uiAnalysistype.registerEvents($scope, $compile);\r\n\r\n      // Register dimension events\r\n      uiDimension.registerEvents($scope, $compile);\r\n\r\n      // Register measure events\r\n      uiMeasure.registerEvents($scope, $compile);\r\n\r\n      // This helper funcition is used in ng.html to create arrays with supplied array length\r\n      $scope.createArray = (arrayLength) => {\r\n        const arr = [];\r\n        for (let i = 0; i < arrayLength; ++i) {\r\n          arr.push(i);\r\n        }\r\n        return arr;\r\n      };\r\n    },\r\n  };\r\n});\r\n"
    ]
}