{
    "version": 3,
    "sources": [
        "chart/datatables.js"
    ],
    "names": [
        "define",
        "$q",
        "draw",
        "app",
        "$scope",
        "elementId",
        "dataset",
        "html",
        "customOptions",
        "defer",
        "visualization",
        "layout",
        "table",
        "options",
        "data",
        "aaSorting",
        "paging",
        "bFilter",
        "dom",
        "buttons",
        "extend",
        "text",
        "exportOptions",
        "columns",
        "bom",
        "charset",
        "colReorder",
        "select",
        "style",
        "columnDefs",
        "targets",
        "visible",
        "searchable",
        "$",
        "require",
        "config",
        "paths",
        "datatables.net",
        "datatables.net-buttons",
        "dataTablesCSS",
        "buttonCSS",
        "colreorderCSS",
        "selectCSS",
        "appendTo",
        "extId",
        "DataTable",
        "resolve",
        "promise",
        "setEvents",
        "on",
        "e",
        "dt",
        "type",
        "indexes",
        "self",
        "selectValues",
        "parseInt",
        "rows"
    ],
    "mappings": "AAAA,YAAAA,SACE,SACC,SAACC,GACF,OACEC,KADK,SACAC,EAAKC,EAAQC,EAAWC,EAASC,EAAMC,GAC1C,GAAMC,GAAQR,EAAGQ,QACXC,EAAgBN,EAAOO,OAAOD,cAChCE,EAAQ,KAENC,GACJC,KAAMR,EACNS,aACAC,QAAQ,EACRC,SAAS,EACTC,IAAK,SACLC,UAEIC,OAAQ,YACRC,KAAM,4GACNC,eACEC,SAAU,EAAG,EAAG,EAAG,EAAG,MAIxBH,OAAQ,WACRI,KAAK,EACLC,QAAS,QACTJ,KAAM,6GACNC,eACEC,SAAU,EAAG,EAAG,EAAG,EAAG,MAIxBH,OAAQ,QACRC,KAAM,8GACNC,eACEC,SAAU,EAAG,EAAG,EAAG,EAAG,MAI5BG,YAAY,EACZC,QACEC,MAAO,SAETC,aAEIC,SAAU,GACVC,SAAS,EACTC,YAAY,IA0ClB,OArCAC,GAAEb,OAAOP,EAASL,GAElB0B,QAAQC,QACNC,OACEC,iBAAA,eAAiC3B,EAAjC,+CACA4B,yBAAA,eAAyC5B,EAAzC,mDAGJwB,SAAQ,oBACcxB,EADd,mDAAA,oBAEcA,EAFd,oDAAA,oBAGcA,EAHd,uDAAA,oBAIcA,EAJd,mDAKN,iBACA,yBANM,gBAOUA,EAPV,2CAAA,gBAWUA,EAXV,2CAAA,gBAYUA,EAZV,mDAAA,gBAaUA,EAbV,gDAcL,SACD6B,EACAC,EACAC,EACAC,GASA,MAPAT,GAAE,WAAW1B,KAAKgC,GAAeI,SAAS,QAC1CV,EAAE,WAAW1B,KAAKiC,GAAWG,SAAS,QACtCV,EAAE,WAAW1B,KAAKkC,GAAeE,SAAS,QAC1CV,EAAE,WAAW1B,KAAKmC,GAAWC,SAAS,QAEtCV,EAAAA,gCAAkC7B,EAAOwC,OAASrC,KAAKA,GACvDK,EAAQqB,EAAE5B,GAAWwC,UAAUhC,GACxBJ,EAAMqC,QAAQlC,KAEhBH,EAAMsC,SAEfC,UAzFK,SAyFKpC,EAAOR,EAAQD,GACvBS,EAAMqC,GAAG,SAAU,SAACC,EAAGC,EAAIC,EAAMC,GAClB,QAATD,GACFhD,EAAOkD,KAAKC,aAAa,GAAIC,SAAS5C,EAAM6C,KAAKJ,GAASvC,OAAO,GAAG,GAAI,MAAM,KAGlFF,EAAMqC,GAAG,WAAY,SAACC,EAAGC,EAAIC,EAAMC,GACpB,QAATD,GACFhD,EAAOkD,KAAKC,aAAa,GAAIC,SAAS5C,EAAM6C,KAAKJ,GAASvC,OAAO,GAAG,GAAI,MAAM",
    "file": "../../js/chart/datatables.js",
    "sourcesContent": [
        "define([\r\n  'ng!$q',\r\n], ($q) => {\r\n  return {\r\n    draw(app, $scope, elementId, dataset, html, customOptions) {\r\n      const defer = $q.defer();\r\n      const visualization = $scope.layout.visualization;\r\n      let table = null;\r\n\r\n      const options = {\r\n        data: dataset,\r\n        aaSorting: [],\r\n        paging: false,\r\n        bFilter: true,\r\n        dom: 'Bfrtip',\r\n        buttons: [\r\n          {\r\n            extend: 'copyHtml5',\r\n            text: '<span class=\"lui-icon  lui-icon--large  lui-icon--copy\"></span><span class=\"lui-button__text\">Copy</span>',\r\n            exportOptions: {\r\n              columns: [1, 2, 3, 4, 5],\r\n            },\r\n          },\r\n          {\r\n            extend: 'csvHtml5',\r\n            bom: true,\r\n            charset: 'utf-8',\r\n            text: '<span class=\"lui-icon  lui-icon--large  lui-icon--export\"></span><span class=\"lui-button__text\">CSV</span>',\r\n            exportOptions: {\r\n              columns: [1, 2, 3, 4, 5],\r\n            },\r\n          },\r\n          {\r\n            extend: 'print',\r\n            text: '<span class=\"lui-icon  lui-icon--large  lui-icon--print\"></span><span class=\"lui-button__text\">Print</span>',\r\n            exportOptions: {\r\n              columns: [1, 2, 3, 4, 5],\r\n            },\r\n          },\r\n        ],\r\n        colReorder: true,\r\n        select: {\r\n          style: 'multi',\r\n        },\r\n        columnDefs: [\r\n          {\r\n            targets: [0],\r\n            visible: false,\r\n            searchable: false,\r\n          },\r\n        ],\r\n      };\r\n\r\n      $.extend(options, customOptions);\r\n\r\n      require.config({\r\n        paths: {\r\n          'datatables.net': `/extensions/${visualization}/lib/vendor/datatables/jquery.dataTables.min`,\r\n          'datatables.net-buttons': `/extensions/${visualization}/lib/vendor/datatables/dataTables.buttons.min`,\r\n        },\r\n      });\r\n      require([\r\n        `css!./extensions/${visualization}/lib/vendor/datatables/jquery.dataTables.min.css`,\r\n        `css!./extensions/${visualization}/lib/vendor/datatables/buttons.dataTables.min.css`,\r\n        `css!./extensions/${visualization}/lib/vendor/datatables/colReorder.dataTables.min.css`,\r\n        `css!./extensions/${visualization}/lib/vendor/datatables/select.dataTables.min.css`,\r\n        'datatables.net',\r\n        'datatables.net-buttons',\r\n        `./extensions/${visualization}/lib/vendor/datatables/buttons.print.min`,\r\n        // `./extensions/${visualization}/lib/vendor/datatables/jszip.min`,\r\n        // `./extensions/${visualization}/lib/vendor/datatables/pdfmake.min`,\r\n        // `./extensions/${visualization}/lib/vendor/datatables/vfs_fonts`,\r\n        `./extensions/${visualization}/lib/vendor/datatables/buttons.html5.min`,\r\n        `./extensions/${visualization}/lib/vendor/datatables/dataTables.colReorder.min`,\r\n        `./extensions/${visualization}/lib/vendor/datatables/dataTables.select.min`,\r\n      ], (\r\n        dataTablesCSS,\r\n        buttonCSS,\r\n        colreorderCSS,\r\n        selectCSS,\r\n      ) => {\r\n        $('<style>').html(dataTablesCSS).appendTo('head');\r\n        $('<style>').html(buttonCSS).appendTo('head');\r\n        $('<style>').html(colreorderCSS).appendTo('head');\r\n        $('<style>').html(selectCSS).appendTo('head');\r\n\r\n        $(`.advanced-analytics-toolsets-${$scope.extId}`).html(html);\r\n        table = $(elementId).DataTable(options);\r\n        return defer.resolve(table);\r\n      });\r\n      return defer.promise;\r\n    },\r\n    setEvents(table, $scope, app) {\r\n      table.on('select', (e, dt, type, indexes) => {\r\n        if (type === 'row') {\r\n          $scope.self.selectValues(0, [parseInt(table.rows(indexes).data()[0][0], 10)], true);\r\n        }\r\n      });\r\n      table.on('deselect', (e, dt, type, indexes) => {\r\n        if (type === 'row') {\r\n          $scope.self.selectValues(0, [parseInt(table.rows(indexes).data()[0][0], 10)], true);\r\n        }\r\n      });\r\n    }\r\n  };\r\n});\r\n"
    ]
}