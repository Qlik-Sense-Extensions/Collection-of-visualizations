{
    "version": 3,
    "sources": [
        "chart/bubble_3d_chart.js"
    ],
    "names": [
        "define",
        "Plotly",
        "utils",
        "draw",
        "$scope",
        "app",
        "data",
        "elementId",
        "customOptions",
        "options",
        "showlegend",
        "layout",
        "props",
        "showLegend",
        "scene",
        "xaxis",
        "title",
        "xLabelsAndTitle",
        "measures",
        "label",
        "tickformat",
        "getTickFormat",
        "tickprefix",
        "getPrefix",
        "ticksuffix",
        "getSuffix",
        "yaxis",
        "yLabelsAndTitle",
        "zaxis",
        "separators",
        "getSeparators",
        "dragmode",
        "margin",
        "r",
        "yAxisPosition",
        "marginRight",
        "l",
        "marginLeft",
        "t",
        "xAxisPosition",
        "marginTop",
        "b",
        "marginBottom",
        "$",
        "extend",
        "config",
        "scrollZoom",
        "showLink",
        "displaylogo",
        "modeBarButtonsToRemove",
        "chart",
        "document",
        "getElementById",
        "plot"
    ],
    "mappings": "AAAA,YAAAA,SACE,0BACA,iBACC,SAACC,EAAQC,GACV,OAWEC,KAXK,SAWAC,EAAQC,EAAKC,EAAMC,EAAWC,GACjC,GAAMC,IACJC,WAAYN,EAAOO,OAAOC,MAAMC,WAChCC,OACEC,OACEC,MAAOZ,EAAOO,OAAOC,MAAMK,gBAAkBb,EAAOO,OAAOC,MAAMM,SAAS,GAAGC,MAAQ,IACrFC,WAAYlB,EAAMmB,cAAcjB,EAAQ,GACxCkB,WAAYpB,EAAMqB,UAAUnB,EAAQ,GACpCoB,WAAYtB,EAAMuB,UAAUrB,EAAQ,IAEtCsB,OACEV,MAAOZ,EAAOO,OAAOC,MAAMe,gBAAkBvB,EAAOO,OAAOC,MAAMM,SAAS,GAAGC,MAAQ,IACrFC,WAAYlB,EAAMmB,cAAcjB,EAAQ,GACxCkB,WAAYpB,EAAMqB,UAAUnB,EAAQ,GACpCoB,WAAYtB,EAAMuB,UAAUrB,EAAQ,IAEtCwB,OACEZ,MAAOZ,EAAOO,OAAOC,MAAMe,gBAAkBvB,EAAOO,OAAOC,MAAMM,SAAS,GAAGC,MAAQ,IACrFC,WAAYlB,EAAMmB,cAAcjB,EAAQ,GACxCkB,WAAYpB,EAAMqB,UAAUnB,EAAQ,GACpCoB,WAAYtB,EAAMuB,UAAUrB,EAAQ,KAGxCyB,WAAY3B,EAAM4B,cAAc1B,EAAQ,GACxC2B,SAAU,SACVC,QACEC,EAAyC,SAArC7B,EAAOO,OAAOC,MAAMsB,cAA4B9B,EAAOO,OAAOC,MAAMuB,YAAc,GAAK/B,EAAOO,OAAOC,MAAMuB,YAC/GC,EAAyC,QAArChC,EAAOO,OAAOC,MAAMsB,cAA2B9B,EAAOO,OAAOC,MAAMyB,WAAa,GAAKjC,EAAOO,OAAOC,MAAMyB,WAC7GC,EAAyC,OAArClC,EAAOO,OAAOC,MAAM2B,cAA0BnC,EAAOO,OAAOC,MAAM4B,UAAY,GAAKpC,EAAOO,OAAOC,MAAM4B,UAC3GC,EAAyC,UAArCrC,EAAOO,OAAOC,MAAM2B,cAA6BnC,EAAOO,OAAOC,MAAM8B,aAAe,GAAKtC,EAAOO,OAAOC,MAAM8B,cAIrHC,GAAEC,OAAOnC,EAASD,EAElB,IAAMqC,IACJC,YAAY,EACZC,UAAU,EACVC,aAAa,EACbC,wBAAyB,oBAGrBC,EAAQC,SAASC,eAAe7C,EAGtC,OAFAN,GAAOoD,KAAKH,EAAO5C,EAAMG,EAASoC,GAE3BK",
    "file": "../../js/chart/bubble_3d_chart.js",
    "sourcesContent": [
        "define([\r\n  '../../vendor/plotly.min',\r\n  '../util/utils'\r\n], (Plotly, utils) => {\r\n  return {\r\n    /**\r\n     * draw - draw chart\r\n     *\r\n     * @param {Object} $scope        angular $scope\r\n     * @param {Object} data          Data for chart\r\n     * @param {String} elementId     HTML element id to embed chart\r\n     * @param {Object} customOptions Custom chart options\r\n     *\r\n     * @return {Object} Chart object\r\n     */\r\n    draw($scope, app, data, elementId, customOptions) {\r\n      const options = {\r\n        showlegend: $scope.layout.props.showLegend,\r\n        scene: {\r\n          xaxis: {\r\n            title: $scope.layout.props.xLabelsAndTitle ? $scope.layout.props.measures[0].label : 'x',\r\n            tickformat: utils.getTickFormat($scope, 0),\r\n            tickprefix: utils.getPrefix($scope, 0),\r\n            ticksuffix: utils.getSuffix($scope, 0),\r\n          },\r\n          yaxis: {\r\n            title: $scope.layout.props.yLabelsAndTitle ? $scope.layout.props.measures[1].label : 'y',\r\n            tickformat: utils.getTickFormat($scope, 1),\r\n            tickprefix: utils.getPrefix($scope, 1),\r\n            ticksuffix: utils.getSuffix($scope, 1),\r\n          },\r\n          zaxis: {\r\n            title: $scope.layout.props.yLabelsAndTitle ? $scope.layout.props.measures[2].label : 'z',\r\n            tickformat: utils.getTickFormat($scope, 2),\r\n            tickprefix: utils.getPrefix($scope, 2),\r\n            ticksuffix: utils.getSuffix($scope, 2),\r\n          },\r\n        },\r\n        separators: utils.getSeparators($scope, 0),\r\n        dragmode: 'select',\r\n        margin: {\r\n          r: ($scope.layout.props.yAxisPosition == 'right') ? $scope.layout.props.marginRight + 70 : $scope.layout.props.marginRight,\r\n          l: ($scope.layout.props.yAxisPosition == 'left') ? $scope.layout.props.marginLeft + 70 : $scope.layout.props.marginLeft,\r\n          t: ($scope.layout.props.xAxisPosition == 'top') ? $scope.layout.props.marginTop + 70 : $scope.layout.props.marginTop,\r\n          b: ($scope.layout.props.xAxisPosition == 'bottom') ? $scope.layout.props.marginBottom + 70 : $scope.layout.props.marginBottom,\r\n        },\r\n      };\r\n\r\n      $.extend(options, customOptions);\r\n\r\n      const config = {\r\n        scrollZoom: true,\r\n        showLink: false,\r\n        displaylogo: false,\r\n        modeBarButtonsToRemove: ['sendDataToCloud'],\r\n      };\r\n\r\n      const chart = document.getElementById(elementId);\r\n      Plotly.plot(chart, data, options, config);\r\n\r\n      return chart;\r\n    },\r\n  };\r\n});\r\n"
    ]
}