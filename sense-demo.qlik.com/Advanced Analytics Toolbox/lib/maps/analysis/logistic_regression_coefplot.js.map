{
    "version": 3,
    "sources": [
        "analysis/logistic_regression_coefplot.js"
    ],
    "names": [
        "define",
        "lineChart",
        "utils",
        "$q",
        "createCube",
        "app",
        "$scope",
        "layout",
        "dimension",
        "validateDimension",
        "props",
        "dimensions",
        "qNullSuppression",
        "qDef",
        "qFieldDefs",
        "meaLen",
        "measures",
        "length",
        "rowsLabel",
        "label",
        "validateMeasure",
        "params",
        "meaList",
        "dataType",
        "i",
        "mea",
        "param",
        "push",
        "calcCoef",
        "calcOddsRatio",
        "splitData",
        "splitDataset",
        "splitPercentage",
        "displayDebugModeMessage",
        "debugMode",
        "saveRDataset",
        "getDebugSaveDatasetScript",
        "defMea1",
        "displayRScriptsToConsole",
        "qLabel",
        "backendApi",
        "applyPatches",
        "qPath",
        "qOp",
        "qValue",
        "JSON",
        "stringify",
        "patchApplied",
        "drawChart",
        "defer",
        "requestPage",
        "qTop",
        "qLeft",
        "qWidth",
        "qHeight",
        "getData",
        "then",
        "dataPages",
        "qHyperCube",
        "qMeasureInfo",
        "qMatrix",
        "qText",
        "displayConnectionError",
        "extId",
        "displayReturnedDatasetToConsole",
        "palette",
        "getDefaultPaletteColor",
        "result",
        "parse",
        "x",
        "array",
        "arrayminus",
        "all",
        "Math",
        "abs",
        "maxVal",
        "max",
        "apply",
        "chartData",
        "y",
        "name",
        "error_x",
        "type",
        "symmetric",
        "thickness",
        "borderWidth",
        "color",
        "colors",
        "colorForMain",
        "mode",
        "marker",
        "size",
        "pointRadius",
        "customOptions",
        "showlegend",
        "showLegend",
        "xaxis",
        "showgrid",
        "xScale",
        "side",
        "xAxisPosition",
        "range",
        "yaxis",
        "yScale",
        "yAxisPosition",
        "autorange",
        "separators",
        "getSeparators",
        "dragmode",
        "margin",
        "r",
        "marginRight",
        "l",
        "marginLeft",
        "t",
        "marginTop",
        "b",
        "marginBottom",
        "$",
        "html",
        "draw",
        "resolve",
        "promise"
    ],
    "mappings": "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",
    "file": "../../js/analysis/logistic_regression_coefplot.js",
    "sourcesContent": [
        "define([\r\n  '../chart/line_chart',\r\n  '../util/utils',\r\n  'ng!$q',\r\n], (lineChart, utils, $q) => {\r\n  return {\r\n    /**\r\n     * createCube - create HyperCubes\r\n     *\r\n     * @param {Object} app    reference to app\r\n     * @param {Object} $scope angular $scope\r\n     *\r\n     * @return {Null} null\r\n     */\r\n     createCube(app, $scope) {\r\n       const layout = $scope.layout;\r\n\r\n       // Display loader\r\n       // utils.displayLoader($scope.extId);\r\n\r\n       // Set definitions for dimensions and measures\r\n       const dimension = utils.validateDimension(layout.props.dimensions[0]);\r\n       const dimensions = [{\r\n         qNullSuppression: true,\r\n         qDef: {\r\n           qFieldDefs: [dimension]\r\n         },\r\n       }];\r\n\r\n       const meaLen = layout.props.measures.length;\r\n       $scope.rowsLabel = ['(Intercept)', (layout.props.measures[1].label != '') ? layout.props.measures[1].label : utils.validateMeasure(layout.props.measures[0]) ]; // Label for dimension values\r\n       let params = `${utils.validateMeasure(layout.props.measures[0])} as mea0, ${utils.validateMeasure(layout.props.measures[1])} as mea1`;\r\n       let meaList = 'mea0 ~ mea1';\r\n       let dataType = 'NN';\r\n\r\n       for (let i = 2; i < meaLen; i++) {\r\n         const mea = utils.validateMeasure(layout.props.measures[i]);\r\n         if (mea.length > 0) {\r\n           const param = `,${mea} as mea${i}`;\r\n           params += param;\r\n           meaList += ` + mea${i}`;\r\n           dataType += 'N';\r\n\r\n           $scope.rowsLabel.push(utils.validateMeasure(layout.props.measures[i]));\r\n         }\r\n       }\r\n\r\n       let calcCoef = 'list(coef(coe)[,1], coef(coe)[,2], coef(coe)[,2])';\r\n       if (layout.props.calcOddsRatio) {\r\n         calcCoef = 'list(exp(coef(coe)[,1]), exp(coef(coe)[,1] - 1.96*coef(coe)[,2]), exp(coef(coe)[,1] + 1.96*coef(coe)[,2]))';\r\n       }\r\n\r\n       // Split dataset into training and test datasets\r\n       const splitData = utils.splitData(layout.props.splitDataset, layout.props.splitPercentage, meaLen);\r\n\r\n       // Debug mode - set R dataset name to store the q data.\r\n       utils.displayDebugModeMessage(layout.props.debugMode);\r\n       const saveRDataset = utils.getDebugSaveDatasetScript(layout.props.debugMode, 'debug_logistic_regression_coefplot.rda');\r\n\r\n       const defMea1 = `R.ScriptEvalExStr('${dataType}','${saveRDataset} library(jsonlite); ${splitData} lm_result <- glm(${meaList}, data=training_data, family=binomial(link=\"logit\")); coe<-summary(lm_result);\r\n       res<-toJSON(${calcCoef});res;',${params})`;\r\n\r\n       // Debug mode - display R Scripts to console\r\n       utils.displayRScriptsToConsole(layout.props.debugMode, [defMea1]);\r\n\r\n       const measures = [\r\n         {\r\n           qDef: {\r\n             qDef: defMea1,\r\n           },\r\n         },\r\n         {\r\n           qDef: {\r\n             qLabel: '-',\r\n             qDef: '', // Dummy\r\n           },\r\n         },\r\n         {\r\n           qDef: {\r\n             qLabel: '-',\r\n             qDef: '', // Dummy\r\n           },\r\n         },\r\n         {\r\n           qDef: {\r\n             qLabel: '-',\r\n             qDef: '', // Dummy\r\n           },\r\n         },\r\n         {\r\n           qDef: {\r\n             qLabel: '-',\r\n             qDef: '', // Dummy\r\n           },\r\n         },\r\n       ];\r\n\r\n       $scope.backendApi.applyPatches([\r\n         {\r\n           qPath: '/qHyperCubeDef/qDimensions',\r\n           qOp: 'replace',\r\n           qValue: JSON.stringify(dimensions),\r\n         },\r\n         {\r\n           qPath: '/qHyperCubeDef/qMeasures',\r\n           qOp: 'replace',\r\n           qValue: JSON.stringify(measures),\r\n         },\r\n       ], false);\r\n\r\n       $scope.patchApplied = true;\r\n       return null;\r\n     },\r\n    /**\r\n    * drawChart - draw chart with updated data\r\n    *\r\n    * @param {Object} $scope angular $scope\r\n    *\r\n    * @return {Object} Promise object\r\n    */\r\n    drawChart($scope) {\r\n      const defer = $q.defer();\r\n      const layout = $scope.layout;\r\n\r\n      const dimension = utils.validateDimension(layout.props.dimensions[0]);\r\n      const requestPage = [{\r\n        qTop: 0,\r\n        qLeft: 0,\r\n        qWidth: 6,\r\n        qHeight: 1,\r\n      }];\r\n\r\n      $scope.backendApi.getData(requestPage).then((dataPages) => {\r\n        const measureInfo = $scope.layout.qHyperCube.qMeasureInfo;\r\n\r\n        // Display error when all measures' grand total return NaN.\r\n        if (dataPages[0].qMatrix[0][1].qText.length === 0 || dataPages[0].qMatrix[0][1].qText == '-') {\r\n          utils.displayConnectionError($scope.extId);\r\n        } else {\r\n          // Debug mode - display returned dataset to console\r\n          utils.displayReturnedDatasetToConsole(layout.props.debugMode, dataPages[0]);\r\n\r\n          const palette = utils.getDefaultPaletteColor();\r\n          const result = JSON.parse(dataPages[0].qMatrix[0][1].qText);\r\n\r\n          const x = [];\r\n          const array = [];\r\n          const arrayminus = [];\r\n          const all = [];\r\n\r\n          for (let i = 0; i < result[0].length; i++) {\r\n            x.push(result[0][i]);\r\n\r\n            if (layout.props.calcOddsRatio) {\r\n              array.push(result[2][i] - result[0][i]);\r\n              arrayminus.push(result[0][i] - result[1][i]);\r\n              all.push(Math.abs(result[1][i]));\r\n              all.push(Math.abs(result[2][i]));\r\n            } else {\r\n              array.push(result[1][i]);\r\n              arrayminus.push(result[2][i]);\r\n              all.push(Math.abs(result[0][i] - result[1][i]));\r\n              all.push(Math.abs(result[0][i] + result[2][i]));\r\n            }\r\n          }\r\n\r\n          const maxVal = Math.max.apply(null, all);\r\n\r\n          const chartData = [\r\n            {\r\n              x,\r\n              y: $scope.rowsLabel,\r\n              name: 'Coefficients plot',\r\n              error_x: {\r\n                type: 'data',\r\n                symmetric: false,\r\n                array,\r\n                arrayminus,\r\n                thickness: layout.props.borderWidth,\r\n                color: (layout.props.colors) ? `rgba(${palette[3]},1)` : `rgba(${palette[layout.props.colorForMain]},1)`,\r\n              },\r\n              type: 'scatter',\r\n              mode: 'markers',\r\n              marker: {\r\n                color: (layout.props.colors) ? `rgba(${palette[3]},1)` : `rgba(${palette[layout.props.colorForMain]},1)`,\r\n                size: layout.props.pointRadius,\r\n              },\r\n            }\r\n          ];\r\n\r\n          const customOptions = {\r\n            showlegend: $scope.layout.props.showLegend,\r\n            xaxis: {\r\n              showgrid: $scope.layout.props.xScale,\r\n              side: $scope.layout.props.xAxisPosition,\r\n              range: [(maxVal * 1.1) * -1, (maxVal * 1.1)],\r\n            },\r\n            yaxis: {\r\n              showgrid: $scope.layout.props.yScale,\r\n              side: $scope.layout.props.yAxisPosition,\r\n              autorange: 'reversed',\r\n              range: [-1, ($scope.rowsLabel.length)],\r\n            },\r\n            separators: utils.getSeparators($scope, 0),\r\n            dragmode: 'select',\r\n            margin: {\r\n              r: ($scope.layout.props.yAxisPosition == 'right') ? $scope.layout.props.marginRight + 70 : $scope.layout.props.marginRight,\r\n              l: ($scope.layout.props.yAxisPosition == 'left') ? $scope.layout.props.marginLeft + 70 : $scope.layout.props.marginLeft,\r\n              t: ($scope.layout.props.xAxisPosition == 'top') ? $scope.layout.props.marginTop + 70 : $scope.layout.props.marginTop,\r\n              b: ($scope.layout.props.xAxisPosition == 'bottom') ? $scope.layout.props.marginBottom + 70 : $scope.layout.props.marginBottom,\r\n            },\r\n          };\r\n\r\n          // Set HTML element for chart\r\n          $(`.advanced-analytics-toolsets-${$scope.extId}`).html(`<div id=\"aat-chart-${$scope.extId}\" style=\"width:100%;height:100%;\"></div>`);\r\n\r\n          lineChart.draw($scope, chartData, `aat-chart-${$scope.extId}`, customOptions);\r\n\r\n        }\r\n        return defer.resolve();\r\n      });\r\n      return defer.promise;\r\n    },\r\n  };\r\n});\r\n"
    ]
}