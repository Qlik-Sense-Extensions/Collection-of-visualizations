{
    "version": 3,
    "sources": [
        "analysis/anova.js"
    ],
    "names": [
        "define",
        "utils",
        "$q",
        "createCube",
        "app",
        "$scope",
        "layout",
        "dimension0",
        "validateDimension",
        "props",
        "dimensions",
        "dimension1",
        "qNullSuppression",
        "qDef",
        "qFieldDefs",
        "params",
        "validateMeasure",
        "measures",
        "meaList",
        "dataTitle",
        "dataType",
        "displayDebugModeMessage",
        "debugMode",
        "saveRDataset",
        "getDebugSaveDatasetScript",
        "defMea1",
        "displayRScriptsToConsole",
        "qLabel",
        "backendApi",
        "applyPatches",
        "qPath",
        "qOp",
        "qValue",
        "JSON",
        "stringify",
        "patchApplied",
        "drawChart",
        "defer",
        "dimension",
        "requestPage",
        "qTop",
        "qLeft",
        "qWidth",
        "qHeight",
        "getData",
        "then",
        "dataPages",
        "qMatrix",
        "qHyperCube",
        "qMeasureInfo",
        "qText",
        "length",
        "displayConnectionError",
        "extId",
        "displayReturnedDatasetToConsole",
        "result",
        "parse",
        "html",
        "items",
        "i",
        "Df",
        "$",
        "resolve",
        "promise"
    ],
    "mappings": "AAAA,YAAAA,SACE,gBACA,SACC,SAACC,EAAOC,GACT,OASEC,WATK,SASMC,EAAKC,GACd,GAAMC,GAASD,EAAOC,OAMhBC,EAAaN,EAAMO,kBAAkBF,EAAOG,MAAMC,WAAW,IAC7DC,EAAaV,EAAMO,kBAAkBF,EAAOG,MAAMC,WAAW,IAC7DA,IACJE,kBAAkB,EAClBC,MACEC,YAAaP,MAIfK,kBAAkB,EAClBC,MACEC,YAAaH,MAKXI,EAAYd,EAAMe,gBAAgBV,EAAOG,MAAMQ,SAAS,IAAxD,aAAwEhB,EAAMO,kBAAkBF,EAAOG,MAAMC,WAAW,IAAxH,WACAQ,EAAU,iBAChBb,GAAOc,UAAYlB,EAAMO,kBAAkBF,EAAOG,MAAMC,WAAW,GAGnE,IAAMU,GAAW,IAGjBnB,GAAMoB,wBAAwBf,EAAOG,MAAMa,UAC3C,IAAMC,GAAetB,EAAMuB,0BAA0BlB,EAAOG,MAAMa,UAAW,mBAEvEG,EAAAA,sBAAgCL,EAAhC,MAA8CG,EAA9C,wCAAkGL,EAAlG,uCAAgJH,EAAhJ,GAGNd,GAAMyB,yBAAyBpB,EAAOG,MAAMa,WAAYG,GAExD,IAAMR,KAEFJ,MACEc,OAAQ,UACRd,KAAMY,KAIRZ,MACEc,OAAQ,IACRd,KAAM,MAIRA,MACEc,OAAQ,IACRd,KAAM,MAIRA,MACEc,OAAQ,IACRd,KAAM,MAIRA,MACEc,OAAQ,IACRd,KAAM,KAmBZ,OAdAR,GAAOuB,WAAWC,eAEdC,MAAO,6BACPC,IAAK,UACLC,OAAQC,KAAKC,UAAUxB,KAGvBoB,MAAO,2BACPC,IAAK,UACLC,OAAQC,KAAKC,UAAUjB,MAExB,GAEHZ,EAAO8B,cAAe,EACf,MASTC,UAxGK,SAwGK/B,GACR,GAAMgC,GAAQnC,EAAGmC,QACX/B,EAASD,EAAOC,OAEhBgC,EAAYrC,EAAMO,kBAAkBF,EAAOG,MAAMC,WAAW,IAC5D6B,IACJC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,QAAS,GAgDX,OA7CAtC,GAAOuB,WAAWgB,QAAQL,GAAaM,KAAK,SAACC,GAC3BA,EAAU,GAAGC,QACT1C,EAAOC,OAAO0C,WAAWC,YAG7C,IAAgD,IAA5CH,EAAU,GAAGC,QAAQ,GAAG,GAAGG,MAAMC,QAAoD,KAApCL,EAAU,GAAGC,QAAQ,GAAG,GAAGG,MAC9EjD,EAAMmD,uBAAuB/C,EAAOgD,WAC/B,CAELpD,EAAMqD,gCAAgChD,EAAOG,MAAMa,UAAWwB,EAAU,GAiBxE,KAAK,GAfCS,GAAStB,KAAKuB,MAAMV,EAAU,GAAGC,QAAQ,GAAG,GAAGG,OAEjDO,EAAAA,gUAWEC,GAASpB,EAAW,aAEjBqB,EAAI,EAAGA,EAAID,EAAMP,OAAQQ,IAChCF,GAAAA,2BACYC,EAAMC,GADlB,YACgCJ,EAAOI,GAAGC,GAD1C,YACwDL,EAAOI,GAAG,UADlE,YACuFJ,EAAOI,GAAG,WADjG,aACuJ,mBAAxBJ,GAAOI,GAAG,WAA6BJ,EAAOI,GAAG,WAAa,IAD7L,aAC0O,mBAAvBJ,GAAOI,GAAG,UAA4BJ,EAAOI,GAAG,UAAY,IAD/Q,6BAESJ,EAAOI,GAAG,UAAY,KAAS,6IAAgJJ,EAAOI,GAAG,UAAY,IAAQ,+FAAkGJ,EAAOI,GAAG,UAAY,IAAQ,iDAAoDJ,EAAOI,GAAG,UAAY,GAAO,IAAM,IAF7a,4BAOFF,IAAAA,mJAOAI,EAAAA,gCAAkCxD,EAAOgD,OAASI,KAAKA,GAEzD,MAAOpB,GAAMyB,YAERzB,EAAM0B",
    "file": "../../js/analysis/anova.js",
    "sourcesContent": [
        "define([\r\n  '../util/utils',\r\n  'ng!$q',\r\n], (utils, $q) => {\r\n  return {\r\n    /**\r\n     * createCube - create HyperCubes\r\n     *\r\n     * @param {Object} app    reference to app\r\n     * @param {Object} $scope angular $scope\r\n     *\r\n     * @return {Null} null\r\n     */\r\n    createCube(app, $scope) {\r\n      const layout = $scope.layout;\r\n\r\n      // Display loader\r\n      // utils.displayLoader($scope.extId);\r\n\r\n      // Set definitions for dimensions and measures\r\n      const dimension0 = utils.validateDimension(layout.props.dimensions[0]);\r\n      const dimension1 = utils.validateDimension(layout.props.dimensions[1]);\r\n      const dimensions = [{\r\n        qNullSuppression: true,\r\n        qDef: {\r\n          qFieldDefs: [dimension0]\r\n        },\r\n      },\r\n      {\r\n        qNullSuppression: true,\r\n        qDef: {\r\n          qFieldDefs: [dimension1]\r\n        },\r\n      }];\r\n\r\n      // Set definitions for dimensions and measures\r\n      const params = `${utils.validateMeasure(layout.props.measures[0])} as mea0, ${utils.validateDimension(layout.props.dimensions[1])} as dim1`;\r\n      const meaList = 'q$mea0 ~ q$dim1';\r\n      $scope.dataTitle = utils.validateDimension(layout.props.dimensions[1]);\r\n\r\n      // Set first and seasonal differences to acf and pacf\r\n      const dataType = 'NS';\r\n\r\n      // Debug mode - set R dataset name to store the q data.\r\n      utils.displayDebugModeMessage(layout.props.debugMode);\r\n      const saveRDataset = utils.getDebugSaveDatasetScript(layout.props.debugMode, 'debug_anova.rda');\r\n\r\n      const defMea1 = `R.ScriptEvalExStr('${dataType}','${saveRDataset} library(jsonlite); res<-summary(aov(${meaList})); json<-toJSON(res[[1]]); json;', ${params})`;\r\n\r\n      // Debug mode - display R Scripts to console\r\n      utils.displayRScriptsToConsole(layout.props.debugMode, [defMea1]);\r\n\r\n      const measures = [\r\n        {\r\n          qDef: {\r\n            qLabel: 'Results',\r\n            qDef: defMea1,\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n      ];\r\n\r\n      $scope.backendApi.applyPatches([\r\n        {\r\n          qPath: '/qHyperCubeDef/qDimensions',\r\n          qOp: 'replace',\r\n          qValue: JSON.stringify(dimensions),\r\n        },\r\n        {\r\n          qPath: '/qHyperCubeDef/qMeasures',\r\n          qOp: 'replace',\r\n          qValue: JSON.stringify(measures),\r\n        },\r\n      ], false);\r\n\r\n      $scope.patchApplied = true;\r\n      return null;\r\n    },\r\n    /**\r\n     * drawChart - draw chart with updated data\r\n     *\r\n     * @param {Object} $scope angular $scope\r\n     *\r\n     * @return {Object} Promise object\r\n     */\r\n    drawChart($scope) {\r\n      const defer = $q.defer();\r\n      const layout = $scope.layout;\r\n\r\n      const dimension = utils.validateDimension(layout.props.dimensions[1]);\r\n      const requestPage = [{\r\n        qTop: 0,\r\n        qLeft: 0,\r\n        qWidth: 6,\r\n        qHeight: 1,\r\n      }];\r\n\r\n      $scope.backendApi.getData(requestPage).then((dataPages) => {\r\n        const qMatrix = dataPages[0].qMatrix;\r\n        const measureInfo = $scope.layout.qHyperCube.qMeasureInfo;\r\n\r\n        // Display error when all measures' grand total return NaN.\r\n        if (dataPages[0].qMatrix[0][2].qText.length === 0 || dataPages[0].qMatrix[0][2].qText == '-') {\r\n          utils.displayConnectionError($scope.extId);\r\n        } else {\r\n          // Debug mode - display returned dataset to console\r\n          utils.displayReturnedDatasetToConsole(layout.props.debugMode, dataPages[0]);\r\n\r\n          const result = JSON.parse(dataPages[0].qMatrix[0][2].qText);\r\n\r\n          let html = `\r\n            <h2>ANOVA - Single factor</h2>\r\n            <table class=\"simple\">\r\n              <thead>\r\n                <tr>\r\n                  </th><th><th>Df</th><th>Sum Sq</th><th>Mean Sq</th><th>F value</th><th>Pr(>F)</th><th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n         `;\r\n\r\n          const items = [dimension, 'Residuals'];\r\n\r\n          for (let i = 0; i < items.length; i++) {\r\n            html += `\r\n              <tr><td>${items[i]}</td><td>${result[i].Df}</td><td>${result[i]['Sum Sq']}</td><td>${result[i]['Mean Sq']}</td><td>${(typeof result[i]['F value'] != 'undefined') ? result[i]['F value'] : ''}</td><td>${(typeof result[i]['Pr(>F)'] != 'undefined') ? result[i]['Pr(>F)'] : ''}</td>\r\n              <td>${(result[i]['Pr(>F)'] < 0.001) ? '<span class=\"lui-icon  lui-icon--star\"></span><span class=\"lui-icon  lui-icon--star\"></span><span class=\"lui-icon  lui-icon--star\"></span>' : (result[i]['Pr(>F)'] < 0.01) ? '<span class=\"lui-icon  lui-icon--star\"></span><span class=\"lui-icon  lui-icon--star\"></span>' : (result[i]['Pr(>F)'] < 0.05) ? '<span class=\"lui-icon  lui-icon--star\"></span>' : (result[i]['Pr(>F)'] < 0.1) ? '.' : ''}</td>\r\n              </tr>`;\r\n          }\r\n\r\n\r\n          html += `\r\n              </tbody>\r\n            </table>\r\n            <div>Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1</div>\r\n          `;\r\n\r\n          // Set HTML element for chart\r\n          $(`.advanced-analytics-toolsets-${$scope.extId}`).html(html);\r\n        }\r\n        return defer.resolve();\r\n      });\r\n      return defer.promise;\r\n    },\r\n  };\r\n});\r\n"
    ]
}