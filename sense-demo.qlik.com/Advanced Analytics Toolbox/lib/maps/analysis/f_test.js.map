{
    "version": 3,
    "sources": [
        "analysis/f_test.js"
    ],
    "names": [
        "define",
        "utils",
        "$q",
        "createCube",
        "app",
        "$scope",
        "layout",
        "dimension",
        "validateDimension",
        "props",
        "dimensions",
        "qNullSuppression",
        "qDef",
        "qFieldDefs",
        "measure1",
        "validateMeasure",
        "measures",
        "measure2",
        "displayDebugModeMessage",
        "debugMode",
        "saveRDataset",
        "getDebugSaveDatasetScript",
        "defMea1",
        "confidenceLevel",
        "displayRScriptsToConsole",
        "qLabel",
        "backendApi",
        "applyPatches",
        "qPath",
        "qOp",
        "qValue",
        "JSON",
        "stringify",
        "patchApplied",
        "drawChart",
        "defer",
        "requestPage",
        "qTop",
        "qLeft",
        "qWidth",
        "qHeight",
        "getData",
        "then",
        "dataPages",
        "qHyperCube",
        "qMeasureInfo",
        "qMatrix",
        "qText",
        "length",
        "displayConnectionError",
        "extId",
        "displayReturnedDatasetToConsole",
        "result",
        "parse",
        "f",
        "numDf",
        "denomDf",
        "pValue",
        "lower",
        "upper",
        "estimate",
        "$",
        "html",
        "resolve",
        "promise"
    ],
    "mappings": "AAAA,YAAAA,SACE,gBACA,SACC,SAACC,EAAOC,GACT,OASEC,WATK,SASMC,EAAKC,GACd,GAAMC,GAASD,EAAOC,OAMhBC,EAAYN,EAAMO,kBAAkBF,EAAOG,MAAMC,WAAW,IAC5DA,IACJC,kBAAkB,EAClBC,MACEC,YAAaN,MAIXO,EAAWb,EAAMc,gBAAgBT,EAAOG,MAAMO,SAAS,IACvDC,EAAWhB,EAAMc,gBAAgBT,EAAOG,MAAMO,SAAS,GAG7Df,GAAMiB,wBAAwBZ,EAAOG,MAAMU,UAC3C,IAAMC,GAAenB,EAAMoB,0BAA0Bf,EAAOG,MAAMU,UAAW,oBAEvEG,EAAAA,2BAAqCF,EAArC,uFAAwId,EAAOG,MAAMc,gBAArJ,qIAAyST,EAAzS,gBAAiUG,EAAjU,cAGNhB,GAAMuB,yBAAyBlB,EAAOG,MAAMU,WAAYG,GAExD,IAAMN,KAEFJ,MACEa,OAAQ,UACRb,KAAMU,KAIRV,MACEa,OAAQ,IACRb,KAAM,MAIRA,MACEa,OAAQ,IACRb,KAAM,MAIRA,MACEa,OAAQ,IACRb,KAAM,MAIRA,MACEa,OAAQ,IACRb,KAAM,KAmBZ,OAdAP,GAAOqB,WAAWC,eAEdC,MAAO,6BACPC,IAAK,UACLC,OAAQC,KAAKC,UAAUtB,KAGvBkB,MAAO,2BACPC,IAAK,UACLC,OAAQC,KAAKC,UAAUhB,MAExB,GAEHX,EAAO4B,cAAe,EACf,MASTC,UA5FK,SA4FK7B,GACR,GAAM8B,GAAQjC,EAAGiC,QACX7B,EAASD,EAAOC,OAGhB8B,GADYnC,EAAMO,kBAAkBF,EAAOG,MAAMC,WAAW,MAEhE2B,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,QAAS,IAgDX,OA7CAnC,GAAOqB,WAAWe,QAAQL,GAAaM,KAAK,SAACC,GACvBtC,EAAOC,OAAOsC,WAAWC,YAG7C,IAAgD,IAA5CF,EAAU,GAAGG,QAAQ,GAAG,GAAGC,MAAMC,QAAoD,KAApCL,EAAU,GAAGG,QAAQ,GAAG,GAAGC,MAC9E9C,EAAMgD,uBAAuB5C,EAAO6C,WAC/B,CAELjD,EAAMkD,gCAAgC7C,EAAOG,MAAMU,UAAWwB,EAAU,GAExE,IAAMS,GAASrB,KAAKsB,MAAMV,EAAU,GAAGG,QAAQ,GAAG,GAAGC,OAE/CO,EAAIF,EAAO,GACXG,EAAQH,EAAO,GACfI,EAAUJ,EAAO,GACjBK,EAASL,EAAO,GAChBM,EAAQN,EAAO,GACfO,EAAQP,EAAO,GACfQ,EAAWR,EAAO,EAIxBS,GAAAA,gCAAkCxD,EAAO6C,OACxCY,KADD,uUAU8BR,EAV9B,0DAWmCC,EAXnC,4DAYqCC,EAZrC,2DAaoCC,EAbpC,2CAcmD,IAA/BnD,EAAOG,MAAMc,gBAdjC,iCAcuFmC,EAdvF,KAciGC,EAdjG,yFAekEC,EAflE,4KAqBF,MAAOzB,GAAM4B,YAER5B,EAAM6B",
    "file": "../../js/analysis/f_test.js",
    "sourcesContent": [
        "define([\r\n  '../util/utils',\r\n  'ng!$q',\r\n], (utils, $q) => {\r\n  return {\r\n    /**\r\n     * createCube - create HyperCubes\r\n     *\r\n     * @param {Object} app    reference to app\r\n     * @param {Object} $scope angular $scope\r\n     *\r\n     * @return {Null} null\r\n     */\r\n    createCube(app, $scope) {\r\n      const layout = $scope.layout;\r\n\r\n      // Display loader\r\n      // utils.displayLoader($scope.extId);\r\n\r\n      // Set definitions for dimensions and measures\r\n      const dimension = utils.validateDimension(layout.props.dimensions[0]);\r\n      const dimensions = [{\r\n        qNullSuppression: true,\r\n        qDef: {\r\n          qFieldDefs: [dimension]\r\n        },\r\n      }];\r\n\r\n      const measure1 = utils.validateMeasure(layout.props.measures[0]);\r\n      const measure2 = utils.validateMeasure(layout.props.measures[1]);\r\n\r\n      // Debug mode - set R dataset name to store the q data.\r\n      utils.displayDebugModeMessage(layout.props.debugMode);\r\n      const saveRDataset = utils.getDebugSaveDatasetScript(layout.props.debugMode, 'debug_f_test.rda');\r\n\r\n      const defMea1 = `R.ScriptEvalExStr('NN','${saveRDataset} library(jsonlite); res<-var.test(na.omit(q$SampleA),na.omit(q$SampleB), conf.level=${layout.props.confidenceLevel});json<-toJSON(list(res$statistic,res$parameter[1],res$parameter[2],res$p.value,res$conf.int[1],res$conf.int[2],res$estimate));', ${measure1} as SampleA, ${measure2} as SampleB)`;\r\n\r\n      // Debug mode - display R Scripts to console\r\n      utils.displayRScriptsToConsole(layout.props.debugMode, [defMea1]);\r\n\r\n      const measures = [\r\n        {\r\n          qDef: {\r\n            qLabel: 'Results',\r\n            qDef: defMea1,\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n      ];\r\n\r\n      $scope.backendApi.applyPatches([\r\n        {\r\n          qPath: '/qHyperCubeDef/qDimensions',\r\n          qOp: 'replace',\r\n          qValue: JSON.stringify(dimensions),\r\n        },\r\n        {\r\n          qPath: '/qHyperCubeDef/qMeasures',\r\n          qOp: 'replace',\r\n          qValue: JSON.stringify(measures),\r\n        },\r\n      ], false);\r\n\r\n      $scope.patchApplied = true;\r\n      return null;\r\n    },\r\n    /**\r\n     * drawChart - draw chart with updated data\r\n     *\r\n     * @param {Object} $scope angular $scope\r\n     *\r\n     * @return {Object} Promise object\r\n     */\r\n    drawChart($scope) {\r\n      const defer = $q.defer();\r\n      const layout = $scope.layout;\r\n\r\n      const dimension = utils.validateDimension(layout.props.dimensions[0]);\r\n      const requestPage = [{\r\n        qTop: 0,\r\n        qLeft: 0,\r\n        qWidth: 6,\r\n        qHeight: 1,\r\n      }];\r\n\r\n      $scope.backendApi.getData(requestPage).then((dataPages) => {\r\n        const measureInfo = $scope.layout.qHyperCube.qMeasureInfo;\r\n\r\n        // Display error when all measures' grand total return NaN.\r\n        if (dataPages[0].qMatrix[0][1].qText.length === 0 || dataPages[0].qMatrix[0][1].qText == '-') {\r\n          utils.displayConnectionError($scope.extId);\r\n        } else {\r\n          // Debug mode - display returned dataset to console\r\n          utils.displayReturnedDatasetToConsole(layout.props.debugMode, dataPages[0]);\r\n\r\n          const result = JSON.parse(dataPages[0].qMatrix[0][1].qText);\r\n\r\n          const f = result[0];\r\n          const numDf = result[1];\r\n          const denomDf = result[2];\r\n          const pValue = result[3];\r\n          const lower = result[4];\r\n          const upper = result[5];\r\n          const estimate = result[6];\r\n\r\n\r\n          // Set HTML element for chart\r\n          $(`.advanced-analytics-toolsets-${$scope.extId}`)\r\n          .html(`\r\n                <h2>F test to compare two variances</h2>\r\n                <table class=\"simple\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Item</th><th>Value</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr><td>F</td><td>${f}</td></tr>\r\n                    <tr><td>num df</td><td>${numDf}</td></tr>\r\n                    <tr><td>denom df</td><td>${denomDf}</td></tr>\r\n                    <tr><td>p-value</td><td>${pValue}</td></tr>\r\n                    <tr><td>${layout.props.confidenceLevel * 100}% confidence interval</td><td>${lower}, ${upper}</td></tr>\r\n                    <tr><td>Sample estimates</td><td>ratio of variances = ${estimate}</td></tr>\r\n                  </tbody>\r\n              </table>\r\n              <div>* alternative hypothesis: true ratio of variances is not equal to 1</div>\r\n          `);\r\n        }\r\n        return defer.resolve();\r\n      });\r\n      return defer.promise;\r\n    },\r\n  };\r\n});\r\n"
    ]
}