"use strict";define(["../util/utils","ng!$q"],function(e,t){return{createCube:function(t,a){var s=a.layout,r=e.validateDimension(s.props.dimensions[0]),n=[{qNullSuppression:!0,qDef:{qFieldDefs:[r]}}],i=s.props.measures.length;a.rowsLabel=["(Intercept)",""!=s.props.measures[1].label?s.props.measures[1].label:e.validateMeasure(s.props.measures[0])];for(var l=e.validateMeasure(s.props.measures[0])+" as mea0, "+e.validateMeasure(s.props.measures[1])+" as mea1",d="mea0 ~ mea1",o="NN",u=2;u<i;u++){var m=e.validateMeasure(s.props.measures[u]);if(m.length>0){var p=","+m+" as mea"+u;l+=p,d+=" + mea"+u,o+="N",a.rowsLabel.push(e.validateMeasure(s.props.measures[u]))}}var c=e.splitData(s.props.splitDataset,s.props.splitPercentage,i);e.displayDebugModeMessage(s.props.debugMode);var h=e.getDebugSaveDatasetScript(s.props.debugMode,"debug_logistic_regression.rda"),f="R.ScriptEvalExStr('"+o+"','"+h+" library(jsonlite); "+c+" lm_result <- glm("+d+', data=training_data, family=binomial(link="logit"));lm_summary <- summary(lm_result);\n      json <- toJSON(list(coef(lm_summary)[,"Estimate"], coef(lm_summary)[,"Std. Error"], coef(lm_summary)[,"z value"], coef(lm_summary)[,"Pr(>|z|)"],\n      as.double(summary(lm_summary$deviance.resid)), lm_summary$dispersion, lm_summary$null.deviance, lm_summary$df.null, lm_summary$deviance, lm_summary$df.residual, lm_summary$aic, lm_summary$iter)); json;\','+l+")";e.displayRScriptsToConsole(s.props.debugMode,[f]);var b=[{qDef:{qDef:f}},{qDef:{qLabel:"-",qDef:""}},{qDef:{qLabel:"-",qDef:""}},{qDef:{qLabel:"-",qDef:""}},{qDef:{qLabel:"-",qDef:""}}];return a.backendApi.applyPatches([{qPath:"/qHyperCubeDef/qDimensions",qOp:"replace",qValue:JSON.stringify(n)},{qPath:"/qHyperCubeDef/qMeasures",qOp:"replace",qValue:JSON.stringify(b)}],!1),a.patchApplied=!0,null},drawChart:function(a){var s=t.defer(),r=a.layout,n=(e.validateDimension(r.props.dimensions[0]),[{qTop:0,qLeft:0,qWidth:2,qHeight:1}]);return a.backendApi.getData(n).then(function(t){a.layout.qHyperCube.qMeasureInfo;if(0===t[0].qMatrix[0][1].qText.length||"-"==t[0].qMatrix[0][1].qText)e.displayConnectionError(a.extId);else{e.displayReturnedDatasetToConsole(r.props.debugMode,t[0]);for(var n=JSON.parse(t[0].qMatrix[0][1].qText),i=n[0],l=n[1],d=n[2],o=n[3],u=n[4],m=n[5],p=n[6],c=n[7],h=n[8],f=n[9],b=n[10],q=n[11],y='\n            <h2>Residuals:</h2>\n            <table class="simple">\n              <thead>\n                <tr>\n                  <th>Min</th><th>1Q</th><th>Median</th><th>3Q</th><th>Max</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>'+u[0]+"</td><td>"+u[1]+"</td><td>"+u[2]+"</td><td>"+u[4]+"</td><td>"+u[5]+'</td>\n                </tr>\n             </tbody>\n            </table>\n\n            <h2>Coefficients:</h2>\n            <table class="simple">\n              <thead>\n                <tr>\n                  <th></th><th>Estimate</th><th>Std.Error</th><th>z value</th><th>Pr(>|z|)</th><th>Signif</th>\n                </tr>\n              </thead>\n              <tbody>\n          ',v=0;v<a.rowsLabel.length;v++)y+="<tr><td>"+a.rowsLabel[v]+"</td><td>"+i[v]+"</td><td>"+l[v]+"</td><td>"+d[v]+"</td><td>"+o[v]+"</td>\n                      <td>"+(o[v]<.001?'<span class="lui-icon  lui-icon--star"></span><span class="lui-icon  lui-icon--star"></span><span class="lui-icon  lui-icon--star"></span>':o[v]<.01?'<span class="lui-icon  lui-icon--star"></span><span class="lui-icon  lui-icon--star"></span>':o[v]<.05?'<span class="lui-icon  lui-icon--star"></span>':o[v]<.1?".":"")+"</td>\n                    </tr>";y+="\n              </tbody>\n            </table>\n            <div>Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1</div>\n            <div>(Dispersion parameter for binomial family taken to be "+m+')</div>\n\n            <h2>Others:</h2>\n            <table class="simple">\n              <thead>\n                <tr>\n                  <th>Item</th><th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr><td>Null deviance</td><td>'+p[0]+" on "+c[0]+" degrees of freedom</td></tr>\n                <tr><td>Residual deviance</td><td>"+h[0]+" on "+f[0]+" degrees of freedom</td></tr>\n                <tr><td>AIC</td><td>"+b[0]+"</td></tr>\n                <tr><td>Number of Fisher Scoring iterations</td><td>"+q[0]+"</td></tr>\n             </tbody>\n            </table>\n          ",$(".advanced-analytics-toolsets-"+a.extId).html(y)}return s.resolve()}),s.promise}}});
//# sourceMappingURL=../../maps/analysis/logistic_regression.js.map
