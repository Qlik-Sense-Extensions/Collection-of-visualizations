"use strict";define(["../chart/wordcloud","../util/utils","ng!$q"],function(e,t,r){return{createCube:function(e,r){var n=r.layout,o=t.validateDimension(n.props.dimensions[0]),s=[{qDef:{qFieldDefs:[o]}}],i=t.validateDimension(n.props.dimensions[1]);t.displayDebugModeMessage(n.props.debugMode);var a=t.getDebugSaveDatasetScript(n.props.debugMode,"debug_textmining_wordcloud.rda"),p="R.ScriptEvalExStr('S','\n               "+a+"\n               library(tm);\n               library(jsonlite);\n               library(SnowballC);\n               counter <- 1:length(q$text);\n               res <- c();\n               for(i in counter) res <- paste(res, q$text[i]);\n               corpus<-VCorpus(VectorSource(res));\n               tdm <- TermDocumentMatrix(corpus, control = list(\n                 tolower = "+n.props.tolower+",\n                 removeNumbers = "+n.props.removeNumbers+",\n                 stopwords = "+n.props.stopwords+",\n                 removePunctuation = "+n.props.removePunctuation+",\n                 stemming = "+n.props.stemming+"\n               ));\n               m <-as.matrix(tdm)\n               sorted<-m[order(m[,1], decreasing=T),];\n               x<-list(names(sorted)[1:"+n.props.numOfFrequentTerms+"], sorted[1:"+n.props.numOfFrequentTerms+"]);\n               json<-toJSON(x, pretty=T);\n               json;\n             ', "+i+" AS text)";t.displayRScriptsToConsole(n.props.debugMode,[p]);var l=[{qDef:{qLabel:"Result",qDef:p}},{qDef:{qLabel:"-",qDef:""}},{qDef:{qLabel:"-",qDef:""}},{qDef:{qLabel:"-",qDef:""}},{qDef:{qLabel:"-",qDef:""}}];return r.backendApi.applyPatches([{qPath:"/qHyperCubeDef/qDimensions",qOp:"replace",qValue:JSON.stringify(s)},{qPath:"/qHyperCubeDef/qMeasures",qOp:"replace",qValue:JSON.stringify(l)}],!1),r.patchApplied=!0,null},drawChart:function(n,o){var s=r.defer(),i=n.layout,a=[{qTop:0,qLeft:0,qWidth:6,qHeight:1}];return n.backendApi.getData(a).then(function(r){return 0===r[0].qMatrix[0][1].qText.length||"-"==r[0].qMatrix[0][1].qText?t.displayConnectionError(n.extId):!function(){t.displayReturnedDatasetToConsole(i.props.debugMode,r[0]);for(var s=(t.getDefaultPaletteColor(),JSON.parse(r[0].qMatrix[0][1].qText)[0]),a=JSON.parse(r[0].qMatrix[0][1].qText)[1],p=[],l=function(e){p.push({text:s[e],weight:a[e],handlers:{click:function(){o.selectAssociations(0,[s[e]],{qSearchFields:[t.validateDimension(i.props.dimensions[1])]})}}})},d=0;d<s.length;d++)l(d);$(".advanced-analytics-toolsets-"+n.extId).html('<div style="width:100%; height:100%" id="aat-chart"></div>'),e.draw(p)}(),s.resolve()}),s.promise}}});
//# sourceMappingURL=../../maps/analysis/textmining_wordcloud.js.map
