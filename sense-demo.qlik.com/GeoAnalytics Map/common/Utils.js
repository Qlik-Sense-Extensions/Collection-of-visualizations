define(["../license","../version","./MathUtils","require","jquery","qlik","module"],function(license,version,MathUtils,require,$,qlik,module){var isQv=Boolean(module.config().qlikview);if(!isQv){require(["css!../common.css","css!./menu-icons-qs.css"])}var DEFAULT_MAPS=["default","plain","tiledraster","empty","emptymeters"];var MAP_DESCRIPTIONS={"default":"Default",plain:"Plain Map",tiledraster:"Default Server Rendered",empty:"Empty (WGS-84)",emptymeters:"Empty (undefined meters)",emptydegreemercator:"Empty (Mercator)",plain_adaptive:"Plain Adaptive",default_adaptive:"Default Adaptive"};var Utils={MAX_OBJECTS:1000,NO_MAP_ID:"<none>",NOP:function(){},DRAW_ORDER_TABLE:{fglabels:10000,ideviochartlayer:150,ideviobubblelayer:100,ideviolinelayer:50,idevioheatmaplayer:20,idevioarealayer:10,ideviogeodatalayer:0,bglabels:-1},POLYGONS:{hexagons:{sides:6,rotation:MathUtils.degToRad(-60)},pentagons:{sides:5,rotation:MathUtils.degToRad(-90)},squares:{sides:4,rotation:MathUtils.degToRad(-45)},triangles:{sides:3,rotation:MathUtils.degToRad(-90)},bars:{sides:4,rotation:0},bubbles:{sides:0,rotation:0},symbols:{sides:0,rotation:0}},LOGLEVEL:{0:"severe",1:"info",2:"warning",3:"severe",4:"off"},qlikview:isQv,loading:undefined,loaded:undefined,mapsToInitiate:{},maps:{},layers:{},mapApi:{},layersLayout:{},testlayers:{},testlayersApi:{},activeLayer:"",getDimensions:function(){var dimension={};for(var key in this.layers){if(this.layers.hasOwnProperty(key)){dimension[key]=this.layers[key].dimension}}return dimension},getSelectableLayers:function(){var selectableLayers={};for(var key in this.layers){if(this.layers[key].layer&&this.layers[key].controlSelect&&this.layers[key].isVisible()){selectableLayers[key]=this.layers[key]}}return selectableLayers},addPropertiesForTestLayer:function(layout,layer){if(typeof testLayer!=="undefined"){layout.qHyperCube.qDimensionInfo[0].qGroupPos=(function(){var drillDownLevel=0;for(var i=0;i<layer.Data.HeaderRows[0][0].members.length;i++){if(layer.Data.HeaderRows[0][0].members[i].active){drillDownLevel=i}}return drillDownLevel});Utils.layersLayout[layout.qInfo.qId]=layout}},getVersion:function(){return version},getLoadedMaps:function(){var loadedMaps=DEFAULT_MAPS;try{if(Utils.getValue(idevio,"map.WebMap.getLoadedBaseMaps")){loadedMaps=idevio.map.WebMap.getLoadedBaseMaps()}["empty","emptymeters","emptydegreemercator"].forEach(function(emptyMap){if(loadedMaps.indexOf(emptyMap)===-1){loadedMaps.push(emptyMap)}})}catch(error){if(window.console){window.console.error("Failed to get loaded maps.",error)}}return loadedMaps},getLoadedMapsOptions:function(){return Utils.getLoadedMaps().map(function(mapName){return{value:mapName,label:MAP_DESCRIPTIONS[mapName]||mapName}})},loadScript:function(server,mapExtension,$element,properties){var error=false;var errorTexts=[];if(!window.onIdevioWebMapLoaded){if(Utils.qlikview){window.otherQvExtCheck="loaded"}if(!window.onIdevioWebMapError){window.onIdevioWebMapError=function(){Utils.loading=false}}window.onIdevioWebMapLoaded=function(){Utils.loaded=true;Utils.loading=false;mapExtension.initMap($element,properties)}}if(Utils.qlikview){if(!window.otherQvExtCheck){error=true;errorTexts.push("Other Maps for QlikView extension is loaded. Will only work with one version at a time.")}if(document.documentMode&&document.documentMode<9){error=true;errorTexts.push("Only Internet Explorer 9 and above is supported. All other modern browsers are supported.")}if(error){var errorMessage="";for(var i=0;i<errorTexts.length;i++){errorMessage+=("Error: "+errorTexts[i]+"<br>")}$(".loadInfo > h3").html(errorMessage);return}}if(!Utils.loaded&&!Utils.loading){Utils.loading=true;server=server.replace(/\/$/,"");var scriptUrl=server+"/ravegeo/webmap5/script/webmap.nocache.js?key="+license+"&opt=tools,iconfactory,geojson,gml";$.getScript(scriptUrl).done(function onScriptLoaded(){if(idevio.Connection.status==="FAILED"){Utils.loading=false;var $loadInfo=$("div.ideviomap > .loadInfo");$loadInfo.find("> .progress").hide();$loadInfo.find("> h3").html("Error: "+idevio.Connection.message)}}).fail(function onScriptLoadFail(jqxhr,type){Utils.loading=false;var status=jqxhr.status||type;var $loadInfo=$("div.ideviomap > .loadInfo");$loadInfo.find("> .progress").hide();$loadInfo.find("> h3").html("Error connecting to server ("+status+")")})}},getMostRecentMapId:function(){var mapIds=Object.keys(Utils.maps);if(mapIds.length===0){return Utils.NO_MAP_ID}return mapIds.reduce(function(a,b){return a>b?a:b})},isValidMapId:function(mapId){return mapId&&mapId!==Utils.NO_MAP_ID&&typeof Utils.maps[mapId]==="object"},getNewMapId:function(){var key;do{key=Math.round(new Date().getTime()/1000)}while(Utils.maps.hasOwnProperty(key));return key},clearErrorInLegend:function(extension){if($("#legend-error-"+extension.id).length>0){$("#legend-error-"+extension.id).remove()}if($("#legend-error-text-"+extension.id).length>0){$("#legend-error-text-"+extension.id).remove()}},setErrorInLegend:function(extension,errorMessage,useAlert){var id=extension.id;var $legendElement=extension.element;$(".loadInfo",$legendElement).remove();if(useAlert){Utils.clearErrorInLegend(extension);alert("Error in "+extension.name+"\n"+errorMessage);return}if($("#legend-error-"+id).length<1){var $legendError=$("<div>");$legendError.attr({id:"legend-error-"+id});$legendError.css({overflow:"hidden",width:"100%",height:"100%","text-align":"center","-ms-filter":"progid:DXImageTransform.Microsoft.Alpha(Opacity =70)",filter:"alpha(opacity =70)",opacity:".7",background:"white"});$legendError.addClass("legend-error");var $errorText=$("<p>").html(errorMessage);$errorText.attr({id:"legend-error-text-"+id,title:errorMessage});$errorText.css({"margin-right":"10px","text-align":"center","font-weight":"20"});$legendError.append($errorText);$legendElement.append($legendError)}},addSpinner:function($element,text){$element.append($("<div>").attr("class","loadInfo").append([$("<div>").attr("class","progress").append($("<div>").attr("class","progress-loader")),$("<h3>").text(text||"")]))},requestData:function(layer,callback,forceReload){function handleData(data){callback(data);if(layer.tooMuchDataError&&layer.tooMuchDataError.empty===false){layer.addWarning("requestTooMuchData",layer.tooMuchDataError.message)}}var height;if(typeof testLayer!=="undefined"){this.layersLayout[layer.layout.qInfo.qId]=layer.layout}height=layer.layout.maxObjects!==undefined?layer.layout.maxObjects:this.MAX_OBJECTS;if(layer.layout.visualization==="ideviochartlayer"){height*=10}layer.tooMuchDataError={empty:true};if(layer.extension.backendApi.getRowCount()>height){if(layer.isVisible()){layer.tooMuchDataError.empty=false;layer.tooMuchDataError.message="Only showing "+height+" objects out of "+layer.extension.backendApi.getRowCount()+". Change layer settings to enable more objects."}}var nobjs=0;var requestDataHelper=function(requestPage,allDataPages){layer.extension.backendApi.getData(requestPage).then(function(dataPages){allDataPages.push(dataPages[0]);nobjs+=dataPages[0].qArea.qHeight;if(nobjs>=height||nobjs>=layer.extension.backendApi.getRowCount()){if(layer.layout.visualization==="ideviochartlayer"){layer.calcDataSourceIndex();if(layer.sizeSource_!==-1){Utils.createCube(layer,function(reply){layer.sizeData=reply;handleData(allDataPages)})}else{handleData(allDataPages)}}else{handleData(allDataPages)}}else{requestPage[0].qTop+=requestPage[0].qHeight;requestPage[0].qHeight=Math.min(Math.min(layer.extension.backendApi.getRowCount(),height)-requestPage[0].qTop,1000);setTimeout(function(){requestDataHelper(requestPage,allDataPages)},50)}})};if(!forceReload&&layer.extension.backendApi.getRowCount()<1000&&height>layer.extension.backendApi.getRowCount()){if(layer.layout.visualization==="ideviochartlayer"){layer.calcDataSourceIndex();if(layer.sizeSource_!==-1){Utils.createCube(layer,function(reply){layer.sizeData=reply;handleData(layer.layout.qHyperCube.qDataPages)})}else{handleData(layer.layout.qHyperCube.qDataPages)}}else{handleData(layer.layout.qHyperCube.qDataPages)}}else{var requestPage=[{qTop:0,qLeft:0,qWidth:10,qHeight:Math.min(Math.min(layer.extension.backendApi.getRowCount(),height),1000)}];requestDataHelper(requestPage,[])}},createCube:function(layer,callback){layer.extension.backendApi.getProperties().then(function(data){var measure=data.qHyperCubeDef.qMeasures[layer.sizeSource_].qDef.qDef;var groupPos=layer.layout.qHyperCube.qDimensionInfo[0].qGroupPos;var dimension=layer.layout.qHyperCube.qDimensionInfo[0].qGroupFieldDefs[groupPos];var qDimensions=[{qDef:{qFieldDefs:[dimension]}}];var qMeasures=[{qDef:{qDef:measure}}];var qInitialDataFetch=[{qTop:0,qLeft:0,qHeight:1000,qWidth:2}];var cubeDef={qDimensions:qDimensions,qMeasures:qMeasures,qInitialDataFetch:qInitialDataFetch};var allData={qMin:undefined,qMax:undefined,total:0,allDataPages:[]};create(allData,cubeDef)});function create(allData,cubeDef){var app=qlik.currApp();app.createCube(cubeDef,function(reply){allData.allDataPages.push(reply.qHyperCube.qDataPages[0]);allData.qMin=(allData.qMin===undefined)?reply.qHyperCube.qMeasureInfo[0].qMin:Math.min(reply.qHyperCube.qMeasureInfo[0].qMin,allData.qMin);allData.qMax=(allData.qMax===undefined)?reply.qHyperCube.qMeasureInfo[0].qMax:Math.max(reply.qHyperCube.qMeasureInfo[0].qMax,allData.qMax);allData.total+=reply.qHyperCube.qDataPages[0].qMatrix.length;if(allData.total<reply.qHyperCube.qSize.qcy){cubeDef.qInitialDataFetch[0].qTop=allData.total;cubeDef.qInitialDataFetch[0].qHeight=allData.total+1000;create(allData,cubeDef)}else{callback(allData)}})}},setDrawOrder:function(properties){var extension=Utils.layers[properties.qInfo.qId];if(extension&&extension.layer&&extension.layer.setDrawOrder){extension.layer.setDrawOrder(Utils.getDrawOrder(properties))}},getDrawOrder:function(properties){var draworder=properties.draworder||{auto:true};draworder.adjustment=draworder.adjustment||0;draworder.category=draworder.category||properties.visualization;if(draworder.auto){return this.DRAW_ORDER_TABLE[draworder.category]}else{var adjustment=Math.max(-10,Math.min(10,draworder.adjustment));return this.DRAW_ORDER_TABLE[draworder.category]+adjustment}},isRestrictedDrillDown:function(properties){var layer=this.layers[properties.qInfo.qId];if(properties.restrictDrillDownLevel&&Utils.getValue(properties,"qHyperCube.qDimensionInfo.0.qGrouping","N")!=="N"){if(properties.restrictDrillDownLevel.indexOf("-")>-1){var ranges=properties.restrictDrillDownLevel.split("-");var from=parseInt(ranges[0]);var to=parseInt(ranges[1]);var dimensionOrder=parseInt(properties.qHyperCube.qDimensionInfo[0].qGroupPos);if(dimensionOrder>=from&&(dimensionOrder<=to||dimensionOrder>16)){if(layer){this.layers[properties.qInfo.qId].isRestricted=false}return 0}else{if(layer){this.layers[properties.qInfo.qId].isRestricted=true}return 1}}else{var enteredLevels=String(properties.restrictDrillDownLevel).split(",").map(Number);if(enteredLevels.indexOf(properties.qHyperCube.qDimensionInfo[0].qGroupPos)===-1){if(layer){layer.isRestricted=true}return 1}else{if(layer){layer.isRestricted=false}return 0}}}else{if(layer){layer.isRestricted=false}return 0}},parseStyles:function(styles){var result=[];styles=styles.split("},");try{styles.forEach(function(style,i){result.push((i<styles.length-1)?JSON.parse(style+"}"):JSON.parse(style))})}catch(ex){return null}return result},getInitialProperties:function(properties,extraProperties){function helper(obj,props){if(typeof props!=="object"){return}if(!!props.items){helper(obj,props.items)}else{if(!!props.ref){var path=props.ref.split(".");var target=obj;for(var i=0;i<path.length;i++){if(i<path.length-1){target[path[i]]=target[path[i]]||{};target=target[path[i]]}else{target[path[i]]="defaultValue" in props?props.defaultValue:null}}}else{for(var key in props){if(props.hasOwnProperty(key)){helper(obj,props[key])}}}}}try{var result={};helper(result,properties);for(var key in extraProperties){if(extraProperties.hasOwnProperty(key)){result[key]=extraProperties[key]}}return result}catch(e){console.error("Error parsing properties:",e);return extraProperties}},setProperties:function(id,changedProperties){if(Utils.qlikview){return{then:Utils.NOP}}var backendApi=Utils.getValue(Utils.layers,id+".extension.backendApi");if(!backendApi||backendApi.isSnapshot){return}var getPromise=backendApi.getProperties();getPromise.then(function(data){jQuery.extend(true,data,changedProperties);backendApi.setProperties(data)});return getPromise},disconnectAllInfoBubbleTools:function(){for(var id in this.layers){if(this.layers[id].bubbleTool){this.layers[id].bubbleTool.disconnect()}}},connectAllInfoBubbleTools:function(map){for(var id in this.layers){if(this.layers[id].bubbleTool){this.layers[id].bubbleTool.connectTo(map)}}},resetAllInfoBubbleTools:function(){for(var id in this.layers){if(this.layers[id].bubbleTool){this.layers[id].bubbleTool.reset()}}},addInfoBubbleTool:function(layer,map,properties,type){if(layer.layer===null){return}var mapLayer=this.maps[properties.mapid];if(properties.infoBubble.visible){var html="{infoBubbleHtml}";if(!layer.bubbleTool){var options={html:html,type:type,dataset:layer.layer.getDataset(),panOnClick:false,panOnMove:false,callback:function infoBubbleCallback(feature,name){var attr=feature.getAttribute(name);if(attr===null||attr===undefined){return""}mapLayer.logger.clearErrorTypes(layer.id,["infoBubbleScriptError"]);setTimeout(function(){$(".idevio-bubble > script").each(function(index,element){var elementText=$(element).text();try{eval(elementText)}catch(e){layer.addError("infoBubbleScriptError","Error in script tag in Info Bubble expression.<br>"+e);mapLayer.logger.showErrors()}})},0);$("body").off("click",".idevio_select_overlapping").on("click",".idevio_select_overlapping",function(){var allFeatures=map.getFeaturesWithin(0,0,map.getDiv().clientWidth,map.getDiv().clientHeight);var selectedFeatures=Utils.getFeaturesInPolygon(allFeatures,feature.getCoordinates()[0]);mapLayer.select(["geometry-select"].concat(selectedFeatures))});return attr}};layer.bubbleTool=new idevio.map.InfoBubbleTool(options);layer.bubbleTool.connectTo(map);$(layer.bubbleTool._popup).attr("id","infobubble-"+layer.id)}else{layer.bubbleTool._dataset=layer.layer.getDataset();layer.bubbleTool.setHtml(html)}}else{if(layer.bubbleTool){layer.bubbleTool.disconnect();delete layer.bubbleTool}}},getInfoBubbleHtml:function(measures,measureInfo,properties,layer,maxCharacters,featureData,numDimensions){maxCharacters=maxCharacters||500;numDimensions=numDimensions||1;function clipText(text){text=text||"";if(maxCharacters>0&&text.length>maxCharacters){text=text.substr(0,maxCharacters)+"..."}return text}function getHtmlRow(title,value){return"<div><b>"+title+":</b> "+clipText(value)+"</div>"}function getHtmlRows(forDimension){var html="";var startIndex;var stopIndex;if(forDimension){startIndex=0;stopIndex=numDimensions}else{startIndex=numDimensions;stopIndex=layer.infoBubbleStart_?layer.infoBubbleStart_+1:measures.length}if(!forDimension&&layer.coordinateSource_>=0){startIndex=layer.coordinateSource_+layer.numCoordinates_}for(var i=startIndex;i<stopIndex;i++){var title=(forDimension)?properties.qHyperCube.qDimensionInfo[i].qFallbackTitle:measureInfo[i-numDimensions].qFallbackTitle;var text=(isNaN(measures[i].qNum))?measures[i].qText||"":String(measures[i].qNum);if(title.length>0&&text.length>0&&text.charAt(0)!=="["){html+=getHtmlRow(title,text)}}return html}function getHtmlRowsColor(){var title="";var text="";if(properties.color.mode==="byMeasure"&&properties.qHyperCube.qDimensionInfo[0]&&properties.qHyperCube.qDimensionInfo[0].qAttrExprInfo&&properties.qHyperCube.qDimensionInfo[0].qAttrExprInfo.length>0){title=properties.qHyperCube.qDimensionInfo[0].qAttrExprInfo[0].label||"";text=(isNaN(measures[0].qAttrExps.qValues[0].qNum)?measures[0].qAttrExps.qValues[0].qText:measures[0].qAttrExps.qValues[0].qNum)||"";if(title.length>0&&!isNaN(text)||(isNaN(text)&&text.length>0&&text.charAt(0)!=="[")){return getHtmlRow(title,text)}}else{if(properties.color.mode==="byDimension"&&properties.qHyperCube.qDimensionInfo[0]&&properties.qHyperCube.qDimensionInfo[0].qAttrDimInfo&&properties.qHyperCube.qDimensionInfo[0].qAttrDimInfo.length>0){title=properties.qHyperCube.qDimensionInfo[0].qAttrDimInfo[0].label||"";text=(isNaN(measures[0].qAttrDims.qValues[0].qNum)?measures[0].qAttrDims.qValues[0].qText:measures[0].qAttrDims.qValues[0].qNum)||"";if(title.length>0&&!isNaN(text)||(isNaN(text)&&text.length>0&&text.charAt(0)!=="[")){return getHtmlRow(title,text)}}}return""}function arrayToTable(array,columns){if(columns<1){return""}var rowCount=Math.ceil(array.length/columns);var index=0;var cells;var rows="";var i;var j;var val;for(i=0;i<rowCount;i++){cells="";for(j=0;j<columns;j++){index=(i*columns)+j;val=(index<array.length)?array[index]:"&nbsp;";if(val instanceof Array){if(val.length>1){val=val[0]+": "+val[1]}else{val=val[0]}}cells+=(i===0)?"<th>"+clipText(val)+"</th>":"<td>"+clipText(val)+"</td>"}rows+="<tr>"+cells+"</tr>"}return"<table>"+rows+"</table>"}if(!properties.infoBubble.visible){return""}var infoBubbleHtml="";var autoFormat=properties.infoBubble.formatCustom;var autoFormatNumbers=properties.infoBubble.formatNumbers&&properties.infoBubble.formatNumbersAuto;var dimensionInfo=properties.qHyperCube.qDimensionInfo;var maxColumnWidth=properties.infoBubble.columnWidth;var formatNumberList;maxCharacters=maxColumnWidth||maxCharacters;if(properties.infoBubble.formatNumbers&&!properties.infoBubble.formatNumbersAuto){formatNumberList=String(properties.infoBubble.formatNumberList).split(",")}if(dimensionInfo.length>1&&featureData&&autoFormat&&properties.chart){var tableData;var headers=0;if(isQv){tableData=[dimensionInfo[1].qFallbackTitle,measureInfo[2].qFallbackTitle];headers=2}else{tableData=[dimensionInfo[1].qFallbackTitle,measureInfo[layer.measureStart-2].qFallbackTitle];headers=2}var numRows=Math.min(featureData.length,10);for(var j=0;j<numRows;j++){tableData.push.apply(tableData,featureData[j].infobubbledata)}infoBubbleHtml+=getHtmlRow(dimensionInfo[0].qFallbackTitle,featureData[0].dimension1);infoBubbleHtml+=MathUtils.formatNumbersInString(arrayToTable(tableData,headers),formatNumberList,autoFormatNumbers);if(numRows===10){infoBubbleHtml+='<div style="text-align: center">Showing '+numRows+"/"+featureData.length+" rows.</div>"}}else{if(autoFormat&&!featureData){var infoBubbleDimension=getHtmlRows(true);var infoBubbleMeasures=getHtmlRows(false);if(!Utils.qlikview){var infoBubbleColorMeasure=getHtmlRowsColor();infoBubbleMeasures+=infoBubbleColorMeasure}if(infoBubbleMeasures.indexOf(infoBubbleDimension)===-1){infoBubbleHtml=MathUtils.formatNumbersInString(infoBubbleDimension+infoBubbleMeasures,formatNumberList,autoFormatNumbers)}else{infoBubbleHtml=MathUtils.formatNumbersInString(infoBubbleMeasures,formatNumberList,autoFormatNumbers)}}else{if(!autoFormat){if(Utils.qlikview&&measures[layer.infoBubbleSource_]){if(measures[layer.infoBubbleSource_].text){infoBubbleHtml=MathUtils.formatNumbersInString(measures[layer.infoBubbleSource_].text,formatNumberList,autoFormatNumbers)}else{infoBubbleHtml=MathUtils.formatNumbersInString(measures[layer.infoBubbleSource_].text+"",formatNumberList,autoFormatNumbers)}}else{if(!Utils.qlikview&&measures[numDimensions]&&measures[numDimensions].qAttrExps&&measures[numDimensions].qAttrExps.qValues.length>2&&(measures[numDimensions].qAttrExps.qValues[2].qText||measures[numDimensions].qAttrExps.qValues[2].qNum)){if(measures[numDimensions].qAttrExps.qValues[2].qText){infoBubbleHtml=MathUtils.formatNumbersInString(measures[numDimensions].qAttrExps.qValues[2].qText,formatNumberList,autoFormatNumbers)}else{infoBubbleHtml=MathUtils.formatNumbersInString(isNaN(measures[numDimensions].qAttrExps.qValues[2].qNum)?"":measures[numDimensions].qAttrExps.qValues[2].qNum+"",formatNumberList,autoFormatNumbers)}}}}}}return infoBubbleHtml},getLabelText:function(measures,properties,index){index=index||1;var label="";if(properties.label&&properties.label.visible&&measures[index]&&measures[index].qAttrExps&&measures[index].qAttrExps.qValues.length>1&&(measures[index].qAttrExps.qValues[1].qText||measures[index].qAttrExps.qValues[1].qNum)){if(measures[index].qAttrExps.qValues[1].qText){label=measures[index].qAttrExps.qValues[1].qText}else{label=isNaN(measures[index].qAttrExps.qValues[1].qNum)?"":measures[index].qAttrExps.qValues[1].qNum+""}}return label},getFeaturesInPolygon:function(features,polygon){return features.filter(function(feature){var coords=feature.getCoordinates();if(coords.length===2&&!(coords[0] instanceof Array)){return MathUtils.pointInPolygon(coords[0],coords[1],polygon)}else{if(coords[0].length&&coords[0].length===2){var length=coords.length;if(MathUtils.pointInPolygon(coords[0][0],coords[0][1],polygon)||MathUtils.pointInPolygon(coords[length-1][0],coords[length-1][1],polygon)){return true}for(var i=1;i<coords.length-1;i++){if(MathUtils.pointInPolygon(coords[i][0],coords[i][1],polygon)){return true}}}else{return false}}})},isGeoMakePoint:function(data,index){if(index<0){return false}var textPropertyName="text";if(!Utils.qlikview){if(!data||!data[0]||!data[0].qMatrix){return false}data=data[0].qMatrix;textPropertyName="qText"}if(!Array.isArray(data)){return false}for(var i=0;i<Math.min(1000,data.length);i++){if(!data[i][index]||!data[i][index][textPropertyName]){continue}var point=data[i][index][textPropertyName];if(point==="-"){continue}if(point.charAt(0)==="["){try{var temp=JSON.parse(point);return(temp.length===2&&!isNaN(temp[0])&&!isNaN(temp[1]))}catch(e){return false}}return false}return false},switchCoordinates:function(coord){function switchTwoValues(v){if(v.length>=2){var tmp=v[0];v[0]=v[1];v[1]=tmp}}if(Array.isArray(coord[0])){for(var i=0;i<coord.length;i++){switchTwoValues(coord[i])}}else{switchTwoValues(coord)}return coord},isQlikGeometry:function(data,index){var v;if(data&&data[0]){if(data[0].qMatrix){v=data[0].qMatrix}else{if(data[0][0]&&data[0][0].text){v=data}}}if(!v){return false}for(var i=0;i<v.length;i++){if(!v[i][index]){continue}var text=v[i][index].qText||v[i][index].text;if(!text||text==="-"){continue}if(text.charAt(0)==="["){return true}else{if(text.charAt(0)!=="["){return false}}}return false},getValue:function(object,path,def){if(!path){return object}var value=path.split(".").reduce(function(obj,prop){return obj==null?null:obj[prop]},object);return value==null?def:value},setValue:function(object,path,val){if(!path){object=val}else{path.split(".").reduce(function(obj,prop,i,arr){if(i===arr.length-1){obj[prop]=val}else{if(typeof obj[prop]!=="object"){obj[prop]={}}}return obj[prop]},object)}},setIfUndefined:function(source,path,target,value){if(typeof Utils.getValue(source,path)==="undefined"){Utils.setValue(target,path,value)}},getClosestMinZoomLevel:function(outLimit,map){var closestMin=1000000;var minLevel=0;for(var i=0;i<=20;i++){var resolution=map.getZoomLevelResolution(i);var outDiff=Math.abs(resolution-outLimit);if(outDiff<closestMin){closestMin=outDiff;minLevel=i}}return minLevel},getClosestMaxZoomLevel:function(inLimit,map){var closestMax=1000000;var maxLevel=20;for(var i=0;i<=20;i++){var resolution=map.getZoomLevelResolution(i);var inDiff=Math.abs(resolution-inLimit);if(inDiff<closestMax){closestMax=inDiff;maxLevel=i}}return maxLevel},getApp:function(){return qlik.currApp()},getSizeFromSliderValue:function(value){if(value<20){return value}else{if(value<40){return 20+(value-20)*2}else{if(value<60){return 60+(value-40)*4}else{return 140+(value-60)*8}}}},getSliderValueFromSize:function(value){if(value<20){return value}else{if(value<60){return 20+(value-20)/2}else{if(value<140){return 40+(value-60)/4}else{return 60+(value-140)/8}}}},getValueFromLogScale:function(val,minSliderValue,maxSliderValue,minOutputValue,maxOutputValue){var minv=Math.log(minOutputValue);var maxv=Math.log(maxOutputValue);var scale=(maxv-minv)/(maxSliderValue-minSliderValue);var result=Number(Math.exp(minv+scale*(val-minSliderValue)));return Math.round(result*100)/100},getValueFromLogScaleRevert:function(val,minSliderValue,maxSliderValue,minOutputValue,maxOutputValue){var minv=Math.log(minOutputValue);var maxv=Math.log(maxOutputValue);var scale=(maxv-minv)/(maxSliderValue-minSliderValue);var result=Number((Math.log(val)-minv)/scale+minSliderValue);return Math.round(result)},parseListToInterval:function(oldListValue,intervalMin,intervalMax){var from=intervalMin;var to=intervalMax;if(!oldListValue){return[from,to]}if(oldListValue.indexOf("-")>-1){var splitted=oldListValue.split("-");if(splitted[0]>=intervalMin&&splitted[0]<=intervalMax){from=splitted[0]}if(splitted[1]>=intervalMin&&splitted[1]<=intervalMax){to=splitted[1]}}else{if(oldListValue.indexOf(",")>-1){var valueList=oldListValue.split(",");if(valueList[0]>=intervalMin&&valueList[0]<=intervalMax){from=valueList[0]}if(valueList[valueList.length-1]>=intervalMin&&valueList[valueList.length-1]<=intervalMax){to=valueList[valueList.length-1]}}else{if(parseInt(oldListValue)||parseInt(oldListValue)===0){from=parseInt(oldListValue);to=parseInt(oldListValue)}}}return[from,to]}};return Utils});