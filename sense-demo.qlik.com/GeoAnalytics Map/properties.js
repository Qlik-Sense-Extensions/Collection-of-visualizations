define(["jquery","../IdevioMap/common/Utils","../IdevioMap/common/MapUtils"],function(c,b,a){return{type:"items",component:"accordion",items:{mapsettings:{type:"items",label:"Map Settings",items:{server:{ref:"server",label:"Server URL (requires reload)",type:"string"},id:{ref:"mapId",label:"Map ID",type:"string",readOnly:true},basemap:{ref:"mapOptions.baseMap",label:"Base Map",type:"string",component:"dropdown",options:function(){return b.getLoadedMapsOptions()},defaultValue:"default",change:function(e){var d=e.mapOptions.baseMap||"default";b.maps[e.mapId].setBaseMap(d);var f=b.maps[e.mapId].map;if(f.setMaxLevel&&f.setMinLevel){f.setMaxLevel(b.getClosestMaxZoomLevel(e.zoomInResolutionLimit,f));f.setMinLevel(b.getClosestMinZoomLevel(e.zoomOutResolutionLimit,f));f.repaint()}}},basemapInfo:{component:"text",label:"Changing basemap may require reload."},selectVisibleGrid:{ref:"selectVisibleGrid",label:"Auto Select Visible",type:"boolean",defaultValue:false,change:function(e){var d=b.maps[e.mapId];d.$gridSelectionButton.toggle(e.selectVisibleGrid);d.fetchSpatialIndexFields()}},showLabels:{ref:"showLabels",label:"Show Labels",type:"boolean",defaultValue:true,change:function(d){var e=b.maps[d.mapId].map;e.getLayer("Background Labels").setVisible(d.showLabels);e.repaint()}},zoomToSelection:{ref:"zoomToSelection",label:"Zoom to Selection",type:"boolean",defaultValue:true,change:function(d){b.maps[d.mapId].restoreViewBounds(d.zoomToSelection)},readOnly:function(d){return d.selectVisibleGrid===true}},saveCurrentView:{label:"Save Current View",component:"button",action:function(d){b.maps[d.mapId].storeViewBounds()},show:function(d){return !(d.zoomToSelection||d.selectVisibleGrid)}},helplink:{component:"link",url:"http://bi.idevio.com/products/idevio-maps-for-qlik-sense",label:"Qlik GeoAnalytics Help "+b.getVersion()},viewCenter:{ref:"viewCenter",type:"number",show:false},viewResolution:{ref:"viewResolution",type:"number",show:false}}},settings:{uses:"settings",items:{tools:{type:"items",label:"Interaction and Controls",items:{pantool:{ref:"panToolEnabled",label:"Allow Panning",type:"boolean",defaultValue:true,change:function(e){var d=b.maps[e.mapId];if(e.panToolEnabled){d.tools.panTool.connectTo(d.map)}else{d.tools.panTool.disconnect()}}},zoomtool:{ref:"zoomToolEnabled",label:"Allow Zooming",type:"boolean",defaultValue:true,change:function(e){var d=b.maps[e.mapId];if(e.zoomToolEnabled){d.tools.zoomTool.connectTo(d.map)}else{d.tools.zoomTool.disconnect()}}},resolutionSlider:{type:"array",component:"slider",ref:"zoomResolutionLimit.range",min:0,max:10000,step:1,defaultValue:[b.getValueFromLogScaleRevert(1.2,0,10000,0.1,160000),b.getValueFromLogScaleRevert(80000,0,10000,0.1,160000)],label:function(d){var f=d.zoomInResolutionLimit||1.2;var e=d.zoomOutResolutionLimit||80000;return"Zoom Limits In "+f+" | Out "+e},change:function(g){var j=g.zoomResolutionLimit.range;var h=b.maps[g.mapId].map;var f=Math.round(h.getResolution()*10)/10;var e=b.getValueFromLogScaleRevert(f,0,10000,0.1,160000);if(j[0]>=e){var i=e-(1+Math.random()*0.00001);j[0]=i;g.zoomInResolutionLimit=b.getValueFromLogScale(i,0,10000,0.1,160000)}else{g.zoomInResolutionLimit=b.getValueFromLogScale(j[0],0,10000,0.1,160000)}if(j[1]<=e){var d=e+(1+Math.random()*0.00001);j[1]=d;g.zoomOutResolutionLimit=b.getValueFromLogScale(d,0,10000,0.1,160000)}else{g.zoomOutResolutionLimit=b.getValueFromLogScale(j[1],0,10000,0.1,160000)}h.setMaxLevel(b.getClosestMaxZoomLevel(g.zoomInResolutionLimit,h));h.setMinLevel(b.getClosestMinZoomLevel(g.zoomOutResolutionLimit,h));h.repaint()}},zoomInResolutionLimit:{ref:"zoomInResolutionLimit",label:"Zoom In Resolution Limit",type:"number",defaultValue:1.2,show:false,change:function(d){var e=b.maps[d.mapId].map;if(e.setMaxLevel){e.setMaxLevel(b.getClosestMaxZoomLevel(d.zoomInResolutionLimit,e));e.repaint()}}},zoomOutResolutionLimit:{ref:"zoomOutResolutionLimit",label:"Zoom Out Resolution Limit",type:"number",defaultValue:80000,show:false,change:function(d){var e=b.maps[d.mapId].map;if(e.setMinLevel){e.setMinLevel(b.getClosestMinZoomLevel(d.zoomOutResolutionLimit,e));e.repaint()}}},selectType:{ref:"selectType",label:"Select Type",type:"string",component:"dropdown",options:[{value:"none",label:"None"},{value:"box",label:"Box"},{value:"circle",label:"Circle"},{value:"lasso",label:"Lasso"}],defaultValue:"lasso",change:function(d){b.maps[d.mapId].tools.boxSelectTool.setType(d.selectType)}},scalebar:{ref:"showScaleBar",label:"Show Scale Bar",type:"boolean",change:function(e){var d=b.maps[e.mapId];if(e.showScaleBar){d.tools.scaleBar.connectTo(d.map)}else{d.tools.scaleBar.disconnect()}}},imperialUnitsScaleBar:{ref:"useImperialUnitsScaleBar",label:"Imperial Units in Scale Bar",type:"boolean",change:function(e){var d=b.maps[e.mapId];d.tools.scaleBar._useImperial=e.useImperialUnitsScaleBar;d.tools.scaleBar._show()},show:function(d){return d.showScaleBar}},layerlist:{ref:"showLayerList",label:"Show Layer Control",type:"boolean",defaultValue:false,change:function(e){var d=b.maps[e.mapId];d.LayerListEnabled=!d.LayerListEnabled;if(!e.showLayerList){d.layerListVisible=false}d.showLayerList(e)}},zoomButtons:{ref:"showZoomButtons",label:"Show Zoom Controls",type:"boolean",defaultValue:false,change:function(d){b.maps[d.mapId].showZoomButtons(d)}},errorList:{ref:"showErrorList",label:"Show Error Messages",type:"boolean",defaultValue:true,change:function(d){b.maps[d.mapId].logger.toggleList(d)}},loglevel:{ref:"logLevel",label:"Log Level",type:"number",component:"dropdown",defaultValue:2,options:[{label:"Debug",value:0},{label:"Info",value:1},{label:"Warning",value:2},{label:"Error",value:3},{label:"None",value:4}],change:function(d){d.mapOptions.debug.logLevel=b.LOGLEVEL[d.logLevel];b.maps[d.mapId].logLevel=d.logLevel}}}}}},debug:{type:"items",label:"Debug",show:function(d){return d.debug},items:{showDebugLayer:{ref:"mapOptions.debug.infoLayer",label:"Show Debug Info",type:"boolean",change:function(d){b.maps[d.mapId].tools.debugLayer.setVisible(d.mapOptions.debug.infoLayer)}},wglenabled:{ref:"mapOptions.gl",label:"Draw with WebGL (experimental)",type:"boolean",show:function(){return Boolean(window.WebGLRenderingContext)},change:function(d){b.maps[d.mapId].reloadMapSettings(d)}},glRandomColors:{ref:"mapOptions.debug.glRandomColors",label:"WebGL Random Colors",type:"boolean",defaultValue:false,show:function(){return Boolean(window.WebGLRenderingContext)}},labelbounds:{ref:"mapOptions.debug.labelBounds",label:"Show Label Bounds",type:"boolean",defaultValue:false}}}}}});